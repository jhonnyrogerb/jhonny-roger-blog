<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Js on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/tags/js/</link>
    <description>Recent content in Js on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 31 Oct 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/tags/js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hello World com React, do rascunho até o primeiro componente</title>
      <link>http://localhost/jhonny-roger/public/hello-world-com-react-do-rascunho-ate-o-primeiro-componente/</link>
      <pubDate>Mon, 31 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/hello-world-com-react-do-rascunho-ate-o-primeiro-componente/</guid>
      <description>Há muito tempo eu queria fazer um Hello World com React, mas nunca tinha tempo por que eu mudei de área há uns 3 anos, ficando mais na parte de gestão de produtos e times, deixando quase que totalmente o desenvolvimento e a escrita de código. Por isso, senti na pele o que os iniciantes sentem quando precisam fazer um simples Hello World de uma tecnologia nova. São tantos artigos falando coisas diferentes, usando setups diferentes, na sua maioria complexos e que não explicam as coisas com simplicidade.</description>
    </item>
    
    <item>
      <title>Upload de imagens desmistificado com simpleGallery.js</title>
      <link>http://localhost/jhonny-roger/public/upload-de-imagens-desmistificado-com-simplegallery-js/</link>
      <pubDate>Wed, 07 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/upload-de-imagens-desmistificado-com-simplegallery-js/</guid>
      <description>Olá pessoal, tudo bem?
Neste artigo vou procurar abordar algo comum no dia-a-dia de qualquer desenvolver, o &amp;#8220;temido&amp;#8221; upload de imagens. No processo utilizarei NodeJS e Express para o back-end. A grande sacada será a utilização da lib simpleGallery.js, que nos auxiliará no front-end.
Passos iniciais.. A seguir criaremos um servidor bem simples. Utilizarei o package &amp;#8220;Multer&amp;#8221; como middleware para as requisições de arquivo. Não vou prezar por segurança nem boas práticas, já que este artigo é apenas para encorajar aqueles que ainda possuem dificuldades.</description>
    </item>
    
    <item>
      <title>Introdução à Programação Funcional (Functional Programming) em Javascript</title>
      <link>http://localhost/jhonny-roger/public/introducao-programacao-funcional-functional-programming-em-javascript/</link>
      <pubDate>Tue, 28 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/introducao-programacao-funcional-functional-programming-em-javascript/</guid>
      <description>Eu venho estudando functional programming já faz um tempo, e decidi colocar no papel o que aprendi, pois para mim essa é a melhor forma de reter o que se aprendeu. Além disso, será um prazer se esse post ajudar outros programadores.
 “Em ciência da computação, programação funcional é um paradigma de programação que trata a computação como uma avaliação de funções matemáticas e que evita estados ou dados mutáveis.</description>
    </item>
    
    <item>
      <title>ReactJS 101</title>
      <link>http://localhost/jhonny-roger/public/reactjs-101/</link>
      <pubDate>Sat, 07 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/reactjs-101/</guid>
      <description>TL;DR ReactJS é a biblioteca criada pelo Facebook para criação de interfaces. Pensando no mundo MV* qual vivenciamos hoje, este seria o V (view).
Através de uma api simples qual previlegia o uso do javascript e com uma performance acima da apresentada pelos seus concorrentes, o ReactJS vem ganhando cada dia mais adeptos.
Building Blocks Fortemente inspirado pelo conceito de componentes, trazendo duas grandes características que o desenvolvedor deve se concentrar: Components eElements.</description>
    </item>
    
    <item>
      <title>Uma visão detalhada sobre instanciação de variaveis no JavaScript</title>
      <link>http://localhost/jhonny-roger/public/uma-visao-detalhada-sobre-instanciacao-de-variaveis-no-javascript/</link>
      <pubDate>Wed, 09 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/uma-visao-detalhada-sobre-instanciacao-de-variaveis-no-javascript/</guid>
      <description>Hoisting Antes de falarmos sobre hoisting é importante lembrar como funciona escopo em JavaScript. Escopo nada mais é do que um contexto criado para os valores e expressões terem sua validade. Em JavaScript o escopo é criado com a declaração de funções. Vamos a um exemplo:
// Escopo global var num = 0; // Escopo criado pela função function imprimir(){ var num = 1; console.log(num); } // Executar a função e o que tem em seu escopo imprimir(); // 1 // Imprimindo a variável do escopo global console.</description>
    </item>
    
    <item>
      <title>Harvest: Boilerplate de Gulp para seus projetos</title>
      <link>http://localhost/jhonny-roger/public/harvest-boilerplate-de-gulp-para-seus-projetos/</link>
      <pubDate>Wed, 07 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/harvest-boilerplate-de-gulp-para-seus-projetos/</guid>
      <description>Não importa qual o Task Runner você usa. Muitos gostam de Grunt, outros de Gulp, outros usam Rake e todos tem o seu encanto e seus truques. Já usei muito Grunt, mas ultimamente tenho experimentado o Gulp. Cara&amp;#8230; como é rápido. Por isso, tive a grande ideia de criar um boilerplate para os meus projetos, onde eu consigo rapidamente concatenar os assets, otimizar imagens, criar source maps dos arquivos SASS, subir um servidor e várias outras coisas.</description>
    </item>
    
    <item>
      <title>Aprendendo JavaScript online</title>
      <link>http://localhost/jhonny-roger/public/aprendendo-javascript-online/</link>
      <pubDate>Fri, 19 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/aprendendo-javascript-online/</guid>
      <description>Outro dia eu estava tentando me lembrar de um site bem simpático e simples para aprender JavaScript online. Eu não me lembrava do nome do site, nem o nome de quem havia feito. Joguei no twitter a pergunta e uma pancada de gente trouxe vários websites cuja a abordagem era aprender JS online, grátis, de forma fácil. Nenhum dos sites era o que eu estava procurando, mas eram sites bem legais que talvez você possa se interessar.</description>
    </item>
    
    <item>
      <title>Jails – O Framework e a Arquitetura do Javascript</title>
      <link>http://localhost/jhonny-roger/public/jails-o-framework-e-arquitetura-javascript/</link>
      <pubDate>Wed, 17 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/jails-o-framework-e-arquitetura-javascript/</guid>
      <description>Quero compartilhar algo que estive desenvolvendo há um tempo: um framework JavaScript. Sim, mais um&amp;#8230; porém este não é um MVC. Eu não acredito muito no MVC como vem sendo difundido para o front-end. Quem já leu algo sobre o React deve imaginar que não estou só nesta maneira de pensar.
Faz um bom tempo que trabalho com JavaScript e dentre todas as formas que usei para elaborar um projeto, uma se destacou por ser a mais eficaz.</description>
    </item>
    
    <item>
      <title>Como criar um Chrome App com o seu Chromebook</title>
      <link>http://localhost/jhonny-roger/public/como-criar-um-chrome-app-com-o-seu-chromebook/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/como-criar-um-chrome-app-com-o-seu-chromebook/</guid>
      <description>O que é um chrome app A ideia de chrome app&amp;nbsp;é trazer ferramentas que você usa no browser para o seu computador. Como se fosse uma extensão do browser. &amp;nbsp;A&amp;nbsp;instalação/desinstalação destes apps é fácil, rápida e sem dor de cabeça, além de contar com aplicativos que podem funcionar off-line.
Por que criar um chrome APP? A grande vantagem, é que aplicativos nativos para Chrome&amp;nbsp;OS são feitos com tecnologias que já conhecemos como HTML, CSS e JS.</description>
    </item>
    
    <item>
      <title>Funções do JavaScript na versão ES 6 – Parte 1</title>
      <link>http://localhost/jhonny-roger/public/funcoes-javascript-na-versao-es-6-parte-1/</link>
      <pubDate>Wed, 25 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/funcoes-javascript-na-versao-es-6-parte-1/</guid>
      <description>Ao longo dos anos as funções em JavaScript não tem mudado muito, mas agora com a nova especificação de ECMAScript 6 teremos algum avanço. Confira abaixo o que tem mudado na nova versão do JavaScript.
Parâmetros Default: Algo muito comum ao desenvolvermos é verificar a presença de uma váriavel e caso ela não exista, inicializamos com um valor, assim como no código abaixo:
function hello(nome,cidade){ nome = nome || &#34;</description>
    </item>
    
    <item>
      <title>Múltiplas galerias de fotos dinâmicas com Fancybox, Ajax e JSON</title>
      <link>http://localhost/jhonny-roger/public/multiplas-galerias-de-fotos-dinamicas-com-fancybox-ajax-e-json/</link>
      <pubDate>Fri, 27 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/multiplas-galerias-de-fotos-dinamicas-com-fancybox-ajax-e-json/</guid>
      <description>Introdução Ano passado trabalhei em um projeto que era um concurso de fotografia online, o Prix Photo Web, onde cada fotógrafo podia se cadastrar, fazer upload de suas fotos e concorrer a um prêmio.
O site tinha uma página de galeria, onde se podia ver os diversos trabalhos publicados a partir de thumbnails.
Eu havia pego o código já quase todo pronto, mas resolvi atualizar algumas coisas e uma delas foi a tal galeria.</description>
    </item>
    
    <item>
      <title>Tamanho da tela e tamanho da janela com JavaScript</title>
      <link>http://localhost/jhonny-roger/public/tamanho-da-tela-e-tamanho-da-janela-com-js/</link>
      <pubDate>Mon, 09 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/tamanho-da-tela-e-tamanho-da-janela-com-js/</guid>
      <description>Se você trabalha em um projeto que precisa ser em visto em todos os dispositivos, você precisará ir muito além das Media Queries. Um passo adiante será detectar o tamanho da tela do usuário e também o tamanho da janela usada pelo usuário.
Note que os dois são bem diferentes. Enquanto o usuário está um desktop, ele pode modificar o tamanho da janela do browser e consequentemente isso irá alterar o breakpoint da página.</description>
    </item>
    
    <item>
      <title>Entendendo as diretivas e fazendo abas com AngularJS</title>
      <link>http://localhost/jhonny-roger/public/diretivas-angularjs-abas/</link>
      <pubDate>Mon, 08 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/diretivas-angularjs-abas/</guid>
      <description>O AngularJS é um framework em JavaScript para a criação de web apps. Uma das suas principais características é levar parte da lógica das funcionalidades dos componentes direto para o HTML a partir das diretivas.
O Rodrigo Branas define as diretivas assim:
 Diretivas são extensões da linguagem HTML que permitem a implementação de novos comportamentos de forma declarativa.  Isso quer dizer que você não vai precisar escrever um monte de JavaScripts para executar funções que deveriam ser simples, como abas, por exemplo.</description>
    </item>
    
    <item>
      <title>O que é Node.js e saiba os primeiros passos</title>
      <link>http://localhost/jhonny-roger/public/o-que-nodejs-primeiros-passos-com-node-js/</link>
      <pubDate>Mon, 28 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/o-que-nodejs-primeiros-passos-com-node-js/</guid>
      <description>O que é Node.js? Node.js é uma plataforma para desenvolvimento de aplicações server-side baseadas em rede utilizando JavaScript e o V8 JavaScript Engine, ou seja, com Node.js podemos criar uma variedade de aplicações Web utilizando apenas código em JavaScript.
Em uma primeira análise essa informação pode não parecer tão interessante, uma vez que existem diversas outras maneiras em que esses tipos de serviços podem ser implementados. Mas se pensarmos um pouco mais sobre as demandas de aplicações na internet e o modo em que o código em JavaScript pode ser estruturado, vamos nos deparar com uma gama de novas possibilidades para desenvolvimento Web, e provavelmente nos juntar à crescente comunidade que tem adotado essa plataforma.</description>
    </item>
    
    <item>
      <title>Web Notifications API</title>
      <link>http://localhost/jhonny-roger/public/web-notifications-api/</link>
      <pubDate>Mon, 14 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/web-notifications-api/</guid>
      <description>Se você trabalha em um site de conteúdo ou em algum produto web, uma possibilidade interessante seria fazer com que o usuário recebesse uma notificação quando houvesse uma nova notícia ou, no caso de produtos, uma notificação do próprio serviço. Com a Notifications API agora é totalmente possível.
Caso você queira dar uma olhada na documentação.
Outro detalhe importante: as notificações só podem ser ativadas por meio de uma interação do usuário, como clique de mouse, teclado e etc&amp;#8230; Logo, vamos usar um botão em nosso exemplo para poder ativar as notificações.</description>
    </item>
    
    <item>
      <title>Qual a dose certa de JavaScript</title>
      <link>http://localhost/jhonny-roger/public/qual-dose-certa-de-javascript/</link>
      <pubDate>Mon, 03 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/qual-dose-certa-de-javascript/</guid>
      <description>Para uma linguagem de programação que começou de maneira tão despretensiosa, o JavaScript ganhou muito espaço. É bem verdade que alguns navegadores não dão suporte à linguagem, mas estes possuem propósitos particulares ou estacionaram em alguma era que não esta.
O navegador Chrome deve muito da sua popularidade pela rapidez com que interpreta JavaScript e a Mozilla há pouco removeu a opção de desabilitar a linguagem no Firefox. Os fabricantes de navegadores bem sabem, querendo ou não, a internet como conhecemos tem o JavaScript como uma de suas principais dependências.</description>
    </item>
    
    <item>
      <title>Bower na prática</title>
      <link>http://localhost/jhonny-roger/public/bower-na-pratica/</link>
      <pubDate>Wed, 15 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/bower-na-pratica/</guid>
      <description>A maioria das linguagens já possuem ferramentas para automatizar e facilitar esse tipo de tarefa.
Por exemplo: Java &amp;#8211; (Maven e Ivy), Ruby &amp;#8211; (Rubygems), Python &amp;#8211; (pip), entre outras.
No desenvolvimento front-end, uma ferramenta que vem ganhando bastante espaço nessa área é o Bower.
Como o bower é para gerenciar componentes de front-end, pode ser adicionado em qualquer projeto, independente do seu back-end ser Java, Ruby, Python, Node, PHP, etc.</description>
    </item>
    
    <item>
      <title>Assegurando a qualidade do seu código JavaScript</title>
      <link>http://localhost/jhonny-roger/public/qualidade-codigo-javascript/</link>
      <pubDate>Mon, 09 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/qualidade-codigo-javascript/</guid>
      <description>Enquanto testes automatizados asseguram o funcionamento de suas aplicações e, portanto, também a qualidade, algumas ferramentas atuam em outra área importante do seu código: a sintaxe.
Ferramentas de lint são scripts que interpretam seus arquivos javascript e buscam erros como varáveis não utilizadas, espaços em branco no final de linha, ausência de ponto-e-vírgula (um ponto polêmico) entre outros.
Abaixo você encontra alguns utilitários que buscam garantir melhor qualidade e padrão para seus códigos.</description>
    </item>
    
  </channel>
</rss>