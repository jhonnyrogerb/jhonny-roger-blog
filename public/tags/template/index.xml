<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Template on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/tags/template/</link>
    <description>Recent content in Template on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 15 Apr 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/tags/template/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Templates client-side com Mustache.js</title>
      <link>http://localhost/jhonny-roger/public/templates-client-side-com-mustache-js/</link>
      <pubDate>Mon, 15 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/templates-client-side-com-mustache-js/</guid>
      <description>Antes de começarmos, uma pergunta: quem nunca implementou um &amp;#8220;template&amp;#8221; nos moldes do código abaixo?
html = &#39;&amp;lt;li class=&#34;clearfix&#34;&amp;gt;&#39;; html += &#39; &amp;lt;div class=&#34;foto&#34;&amp;gt;&#39;; html += &#39; &amp;lt;a href=&#34;&#39; + item.permalink + &#39;&#34;&amp;gt;&#39;; html += &#39; &amp;lt;img src=&#34;&#39; + item.thumb + &#39;&#34; width=&#34;180&#34; height=&#34;124&#34; alt=&#34;&#39; + item.titulo + &#39;&#34;&amp;gt;&#39;; html += &#39; &amp;lt;/a&amp;gt;&#39;; html += &#39; &amp;lt;/div&amp;gt;&#39;; html += &#39; &amp;lt;span&amp;gt;&#39;; html += item.titulo; html += &#39; &amp;lt;/span&amp;gt;&#39;; html += &#39;&amp;lt;/li&amp;gt;&#39;; Se você ainda faz isso, chegou a hora de parar.</description>
    </item>
    
    <item>
      <title>Templates e jQuery – parte 2</title>
      <link>http://localhost/jhonny-roger/public/templates-jquery-parte2/</link>
      <pubDate>Mon, 13 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/templates-jquery-parte2/</guid>
      <description>Na primeira parte deste artigo você conferiu uma introdução ao novo plugin .tmpl() que possibilita a utilização de templates para retornos e saídas de suas aplicações jQuery. O plugin certamente é um avanço considerável na organização de código &amp;#8211; é o JavaScript ficando cada vez mais profissional e robusto, abandonando a fama de ser uma simples linguagem de script, sem padrões.
A forma mais básica de utilização do plugin .</description>
    </item>
    
    <item>
      <title>WordPress Include Tags</title>
      <link>http://localhost/jhonny-roger/public/wordpress-include-tags/</link>
      <pubDate>Sun, 06 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/wordpress-include-tags/</guid>
      <description>&lt;p&gt;O &lt;a href=&#34;http://wordpress.org/&#34;&gt;WordPress&lt;/a&gt; tem 3 TemplatesTags para incluir elementos básicos de Cabeçalho, Coluna lateral (sidebar) e Rodapé, são eles: get_header(), get_sidebar() e get_footer(). Essas TemplateTags não aceitam qualquer tipo de parâmetro, portanto são simples de se aplicar. Em todos os themes do WordPress, essas 3 TemplateTags estão sempre presentes, mesmo assim, você pode modificar isso incluindo outro arquivo que não seja o padrão que o WP estabeleceu.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>