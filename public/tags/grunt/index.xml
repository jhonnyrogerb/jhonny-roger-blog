<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grunt on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/tags/grunt/</link>
    <description>Recent content in Grunt on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 23 Nov 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/tags/grunt/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ES2015 – Babel 6 com Browserify e Babelify</title>
      <link>http://localhost/jhonny-roger/public/es2015-babel-6-com-browserify-e-babelify/</link>
      <pubDate>Mon, 23 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/es2015-babel-6-com-browserify-e-babelify/</guid>
      <description>Vivemos um momento de transição no mundo Javascript com a aprovação do ES2015 ou ES6, porém, este novo padrão ainda não é suportado totalmente por todos os navegadores, para administrar este problema foi criado o Babel, um compiler Javascript, que além de suas muitas funções, nesta versão 6, pode transformar ES2015 em ES5.
Instalando Para este tutorial, iremos utilizar o Babelify, um módulo npm feito para funcionar juntamente com o Browserify, outro módulo que empacota todos os seus requires para serem usados no browser.</description>
    </item>
    
    <item>
      <title>Harvest: Boilerplate de Gulp para seus projetos</title>
      <link>http://localhost/jhonny-roger/public/harvest-boilerplate-de-gulp-para-seus-projetos/</link>
      <pubDate>Wed, 07 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/harvest-boilerplate-de-gulp-para-seus-projetos/</guid>
      <description>Não importa qual o Task Runner você usa. Muitos gostam de Grunt, outros de Gulp, outros usam Rake e todos tem o seu encanto e seus truques. Já usei muito Grunt, mas ultimamente tenho experimentado o Gulp. Cara&amp;#8230; como é rápido. Por isso, tive a grande ideia de criar um boilerplate para os meus projetos, onde eu consigo rapidamente concatenar os assets, otimizar imagens, criar source maps dos arquivos SASS, subir um servidor e várias outras coisas.</description>
    </item>
    
    <item>
      <title>Cache busting: entrega inteligente de assets</title>
      <link>http://localhost/jhonny-roger/public/cache-busting-entrega-inteligente-de-assets/</link>
      <pubDate>Thu, 18 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/cache-busting-entrega-inteligente-de-assets/</guid>
      <description>Definição Cache busting nada mais é do que uma técnica para contornar o problema do carregamento de versões antigas dos assets armazenados em cache no navegador do cliente.
Problema Na verdade, essa é uma questão de longa data. Muitos desenvolvedores utilizam-se do incremento de variáveis com códigos aleatórios no final das chamadas (querystrings) dos assets para contornar o problema, o que, de acordo com Steve Souders, guru em performance de sites na web, não é uma boa prática.</description>
    </item>
    
    <item>
      <title>Grunt: você deveria estar usando!</title>
      <link>http://localhost/jhonny-roger/public/grunt-voce-deveria-estar-usando/</link>
      <pubDate>Sun, 14 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/grunt-voce-deveria-estar-usando/</guid>
      <description>Todo programador é preguiçoso, e isso é fato, pois sempre estamos procurando ferramentas que automatizem o trabalho para nós. Mas isso necessariamente não é algo ruim, pelo contrário, automatizar tarefas (objetivo do Grunt) implica em ganho de produção e isso é ótimo. O que não podemos deixar acontecer é a não realização de tarefas primordiais para que uma aplicação tenha qualidade.
Minificação e concatenação de arquivos por exemplo são tarefas básicas e você não deve deixar isso de lado, mas fazer isso usando um plugin no editor (que seja o Sublime Text) ou um site, copiar o código minificado, colar em um novo arquivo renomeado com .</description>
    </item>
    
  </channel>
</rss>