<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Promises on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/tags/promises/</link>
    <description>Recent content in Promises on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 07 Oct 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/tags/promises/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Provent – Promises e Eventos… combinados.</title>
      <link>http://localhost/jhonny-roger/public/provent-promises-e-eventos-combinados/</link>
      <pubDate>Wed, 07 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/provent-promises-e-eventos-combinados/</guid>
      <description>Hoje, quando não estamos usando jQuery para lidar com eventos no DOM, nós presenciamos muito este trecho de código:
document.querySelector(&#39;a&#39;).addEventListener(&#39;click&#39;, function() { // amazing stuff });  Embora funcione muito bem, nos trás alguns limites&amp;#8230;
Dentro do parâmetro de callback, é onde você define toda a sua lógica&amp;#8230; Não tem uma maneira simples de adicionar mais callbacks dentro daquele evento de maneira dinâmica, sem que você salve algum tipo de estado dentro daquele callback&amp;#8230; por exemplo:</description>
    </item>
    
  </channel>
</rss>