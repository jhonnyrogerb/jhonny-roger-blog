<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Objetos on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/tags/objetos/</link>
    <description>Recent content in Objetos on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 04 Jun 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/tags/objetos/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaScript: Objetos Literais vs. Funções Construtoras</title>
      <link>http://localhost/jhonny-roger/public/javascript-objetos-literais-vs-funcoes-construtoras/</link>
      <pubDate>Tue, 04 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/javascript-objetos-literais-vs-funcoes-construtoras/</guid>
      <description>Existem duas maneiras de criar objetos JavaScript e muita gente as confunde ou acha que são a mesma coisa. No entanto, Objetos Literais e Funções Construtoras são conceitos bem diferentes e entendê-los vai fazer com que você tire melhor proveito da linguagem.
Objetos Literais Este é o tipo básico de objetos JavaScript. É o formato popularizado através do JSON (JavaScript Object Notation). O objeto é criado utilizando um par de chaves ({}) e suas propriedades e métodos são todos públicos.</description>
    </item>
    
  </channel>
</rss>