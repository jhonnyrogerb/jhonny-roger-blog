<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Phpoo on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/tags/phpoo/</link>
    <description>Recent content in Phpoo on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 16 Jun 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/tags/phpoo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Iniciando com Symfony 2 – Parte Final</title>
      <link>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-final/</link>
      <pubDate>Tue, 16 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-final/</guid>
      <description>Chegamos ao final da nossa série sobre Symfony. Se você não leu os outros, no final do artigo há uma listagem com todos os artigos já publicados dessa série.
No tutorial anterior, instalamos e configuramos o bundle StofDoctrineExtensionsBundle, para fazermos os slugs de nossos posts, agora vamos instalar e configurar o Bundle FOSUserBundle, para fazer a autenticação da área administrativa do nosso blog.
Instalação do bundle FOSUserBundle. Para instalar o FOSUserBundle, temos que adicioná-lo em nosso composer.</description>
    </item>
    
    <item>
      <title>Iniciando com Symfony 2 – Parte 09</title>
      <link>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-09/</link>
      <pubDate>Sun, 24 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-09/</guid>
      <description>No tutorial anterior, instalamos e configuramos o bundle Knp Paginator, para fazer a paginação de posts em nosso index, agora vamos instalar e configurar o Bundle StofDoctrineExtensionsBundle, para fazermos os slugs de nossos posts
Instalação do bundle StofDoctrineExtensionsBundle Para instalar o StofDoctrineExtensionsBundle, temos que adicioná-lo em nosso composer.json. Abra o arquivo composer.json e adicione a linha abaixo:
&#34;stof/doctrine-extensions-bundle&#34;: &#34;1.2.*@dev&#34;  Depois de adicionando o StofDoctrineExtensionsBundle no composer, vamos instalá- lo.</description>
    </item>
    
    <item>
      <title>Iniciando com Symfony 2 – Parte 08</title>
      <link>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-08/</link>
      <pubDate>Tue, 28 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-08/</guid>
      <description>No tutorial anterior, criamos um upload de imagens para servirem de capa para nossos posts, agora vamos instalar e configurar um Bundle, disponibilizado pela comunidade, para fazer a paginação de nossa página index. Para isso temos que instalar o Knp Paginator em nossa aplicação.
Instalação do Knp Paginator Para instalar o Knp Paginator, temos que adicioná-lo em nosso composer.json. Abra o arquivo composer.json e adicione a linha abaixo:
&#34;knplabs/knp-paginator-bundle&#34;: &#34;</description>
    </item>
    
    <item>
      <title>Iniciando com Symfony 2 – Parte 07</title>
      <link>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-07/</link>
      <pubDate>Fri, 10 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-07/</guid>
      <description>No tutorial anterior, estilizamos nossas páginas, index e show, e incluímos um imagem para apresentar nossos posts no index, porém colocamos esta imagem pelo código fonte, agora vamos fazer algumas configurações, para que, na criação dos posts, tenha a opção de fazer o upload de uma imagem, para ser apresentada como capa de nossos posts.
Configurando a entidade Post Para criarmos um upload de imagem, vamos usar o componente http-foundation do Symfony, e usar sua classe UploadedFile em nossa entidade Post.</description>
    </item>
    
    <item>
      <title>Iniciando com Symfony 2 – Parte 06</title>
      <link>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-06/</link>
      <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-06/</guid>
      <description>No tutorial anterior, configuramos nosso projeto e criamos nossas páginas, home e show, porém as mesmas se encontram sem estilização, neste tutorial, vamos apenas estruturar nossas páginas de um modo simples e básico, porém funcional. Não entrarei em detalhes sobre o Bootstrap, não é meu objetivo, porém para iniciantes, recomendo a documentação.
Sobre o Twig, falarei o básico do básico, somente o que vamos usar. Lembrando que ele já vem instalado e configurado no Symfony, porém podemos instalá-lo separadamente via Composer e configurá- lo em outros projetos, usando ou não outros frameworks.</description>
    </item>
    
    <item>
      <title>Iniciando com Symfony 2 – Parte 05</title>
      <link>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-05/</link>
      <pubDate>Thu, 19 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-05/</guid>
      <description>No tutorial anterior, criamos a entidade Author, e fizemos o relacionamento com os posts, neste tutorial vamos fazer as configurações adequadas para que possamos deixar nossa aplicação estruturada corretamente, e vamos criar e configurar a página index, onde os usuários terão acesso para visualizar e ler os posts.
Configurando Vamos começar com as configurações.
Entrando no bundle CoreBundle, caminho: src/Tableless/CoreBundle, exclua a pasta Controller.

Ainda neste mesmo bundle vamos excluir a pasta view, caminho: src/Tableless/CoreBundle/Resources/view.</description>
    </item>
    
    <item>
      <title>Iniciando com Symfony 2 – Parte 04</title>
      <link>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-04/</link>
      <pubDate>Wed, 04 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-04/</guid>
      <description>Anteriormente, criamos a entidade Post, vamos dar continuidade ao nosso simples projeto, criando uma entidade Author, faremos o relacionamento para que cada autor fique ligado ao post que criou.
Criando a entidade Author Vamos criar a entidade Author, entre no terminal e digite:
$ php app/console generate:doctrine:entity  Vamos digitar o nome da entidade como : TablelessModelBundle:Author.
$ The Entity shortcut name: TablelessModelBundle:Author  Vamos mapeá-la usando annotation. Apenas damos enter.</description>
    </item>
    
    <item>
      <title>Iniciando com Symfony 2 – Parte 03</title>
      <link>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-03/</link>
      <pubDate>Wed, 18 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-03/</guid>
      <description>Dando continuidade ao tutorial anterior, vamos continuar usando o componente console do Symfony, agora criaremos uma entidade, para acessar o banco de dados, usando o Doctrine ORM.
Banco de dados com Doctrine ORM Quando falamos de banco de dados em projetos com Symfony, estamos falando de Doctrine ORM (Object Relational Mapper), onde criamos uma camada de persistência entre a aplicação e um banco de dados, que mapeia nossas tabelas com entidades, para que possamos acessar o banco.</description>
    </item>
    
    <item>
      <title>Iniciando com Symfony 2 – Parte 02</title>
      <link>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-02/</link>
      <pubDate>Mon, 09 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/iniciando-com-symfony-2-parte-02/</guid>
      <description>Depois de já instalado o Symfony 2, como postado no artigo anterior que escrevi, vamos avançar nosso processo criando um simples blog.
É claro que o Symfony é para projetos maiores, mas para efeito de didática, achei um bom começo, espero que gostem.
Bundle o coração do symfony O Symfony trabalha com bundle (pacote), que é um conjunto de códigos que pode ser reutilizado em outros projetos. Simplificando: são componentes prontos, que facilitam nossa vida na hora de desenvolver.</description>
    </item>
    
    <item>
      <title>Iniciando com Symfony 2</title>
      <link>http://localhost/jhonny-roger/public/iniciando-com-symfony-2/</link>
      <pubDate>Wed, 21 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/iniciando-com-symfony-2/</guid>
      <description>O symfony é um framework fullstack de aplicações web para as necessidades de alto desempenho, é um conjunto de componentes PHP, para grandes e avançados projetos, porém podemos instalar seus componentes separadamente em casos de projetos menores. É muito respeitado pela comunidade, não é apenas um Framework popular, mas também é uma das melhores plataformas para construir projetos Open-Source. Muitos projetos PHP estão incorporando alguns dos componentes ou estão usando o framework full-stack, projetos como Drupal, Laravel, entre outros, veja a lista.</description>
    </item>
    
  </channel>
</rss>