<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flexbox on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/tags/flexbox/</link>
    <description>Recent content in Flexbox on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 05 Apr 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/tags/flexbox/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>React Native: Construa aplicações móveis nativas com JavaScript</title>
      <link>http://localhost/jhonny-roger/public/react-native-construa-aplicacoes-moveis-nativas-com-javascript/</link>
      <pubDate>Tue, 05 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/react-native-construa-aplicacoes-moveis-nativas-com-javascript/</guid>
      <description>Introdução O React Native é um projeto desenvolvido pelos engenheiros do Facebook e que consiste em uma série de ferramentas que viabilizam a criação de aplicações móveis nativas para a plataforma iOS e Android, utilizando o que há de mais moderno no desenvolvimento Front-end &amp;#8211; mirando no futuro. É o estado da arte no que se refere ao desenvolvimento mobile baseado em JavaScript.
O stack do React Native é poderoso, pois nos permite utilizar ECMAScript 6, CSS Flexbox, JSX, diversos pacotes do NPM e muito mais.</description>
    </item>
    
    <item>
      <title>Centralizando conteúdo na vertical e horizontal  com CSS Flexbox</title>
      <link>http://localhost/jhonny-roger/public/centralizando-conteudo-na-vertical-e-horizontal-com-css-flexbox/</link>
      <pubDate>Wed, 07 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/centralizando-conteudo-na-vertical-e-horizontal-com-css-flexbox/</guid>
      <description>Centralizar as coisas com CSS não é algo trivial. Na verdade, centralizar na horizontal é até fácil. Mas centralizar elementos na vertical já beira o impossível. Existem as maneiras antigas, com position por exemplo, mas que não passam de gambiarras. Dá para fazer com display: table; emulando uma tabela. Mas também não é a melhor das soluções.
Como eu estou usando cada vez mais Flexbox, acho que já é uma boa hora de usarmos essa alegria em produção.</description>
    </item>
    
    <item>
      <title>Flexbox – Organizando seu layout</title>
      <link>http://localhost/jhonny-roger/public/flexbox-organizando-seu-layout/</link>
      <pubDate>Mon, 01 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/flexbox-organizando-seu-layout/</guid>
      <description>O CSS Flexible Box Layout Model ou simplesmente Flexbox faz parte da especificação do CSS3 que promete organizar elementos na página previsivelmente quando o layout precisa ser visualizado em diversos tamanhos de tela e em diversos dispositivos.
O Flexbox nos ajuda a organizar esses elementos sem a ajuda do float e também nos ajudam a sanar problemas de Box Model que normalmente acontecem quando acrescentamos, padding, margin e border além da largura do elemento.</description>
    </item>
    
  </channel>
</rss>