<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Performance on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/tags/performance/</link>
    <description>Recent content in Performance on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 23 May 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/tags/performance/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Performance do Tableless estático</title>
      <link>http://localhost/jhonny-roger/public/velocidade-tableless-estatico/</link>
      <pubDate>Tue, 23 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/velocidade-tableless-estatico/</guid>
      <description>Não faz muito tempo eu decidi retirar o Wordpress do Tableless e migrá-lo totalmente para o Hugo, que é um gerador de websites estáticos, como o Middleman ou o Jekyll. Dentre todas as vantagens, a mais aparente, sem dúvida, é o aumento de performance de carregamento do site.
Todo mundo sabe como fazer um site carregar mais rápido. Existem diversas dicas, diversas manobras para fazer um site carregar num piscar de olhos, mas nenhuma se compara em ter um site totalmente estático, sem dependencias de banco ou back-end.</description>
    </item>
    
    <item>
      <title>Acelere o carregamento de seu site com PHP Caching</title>
      <link>http://localhost/jhonny-roger/public/acelere-o-carregamento-de-seu-site-com-php-caching/</link>
      <pubDate>Thu, 07 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/acelere-o-carregamento-de-seu-site-com-php-caching/</guid>
      <description>Criar um site dinâmico, de fácil manutenção e que carregue rápido é o desejo de todo desenvolvedor, mas para isso não existe uma fórmula mágica, é necessário conciliar diferentes ferramentas e técnicas. 
Mas muitos desenvolvedores iniciantes em PHP não conhecem as soluções existentes ou tem medo da curva de aprendizado que os frameworks exigem.
O foco desse artigo é mostrar para esses desenvolvedores como uma técnica simples, utilizando apenas comandos básicos do PHP, pode acelerar o carregamento de seu site e evitar que ele fique caindo.</description>
    </item>
    
    <item>
      <title>Não se preocupe tanto com o Time To First Byte</title>
      <link>http://localhost/jhonny-roger/public/nao-se-preocupe-tanto-com-o-time-to-first-byte/</link>
      <pubDate>Mon, 11 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/nao-se-preocupe-tanto-com-o-time-to-first-byte/</guid>
      <description>O pessoal da CloudFlare fez um teste muito interessante, provando que a medida TTFB (Time To First Byte) não é tão precisa para provarmos que a resposta do servidor de um site é rápida.
O que eles fizeram: em um servidor de teste eles criaram um delay de resposta HTTP para entender o que realmente é medido. A resposta foi que o TTFB não é uma medida tão útil assim. Quando um browser faz o request de uma página no servidor, ele envia alguns headers para especificar algumas coisas como os formatos de respostas aceitos.</description>
    </item>
    
    <item>
      <title>Animações fluídas à 60fps</title>
      <link>http://localhost/jhonny-roger/public/animacoes-fluidas-60fps/</link>
      <pubDate>Mon, 29 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/animacoes-fluidas-60fps/</guid>
      <description>Existem diversas maneiras da página interagir com o usurário, e uma dessas maneiras é a interação com animações. Podem ser desde animações mais triviais como o scroll de um elemento, até animações mais complexas como gráficos de jogos.
Algumas vezes sentimos nossa UI engasgar durante essas interações, dando o sentimento de que algo está sendo executado com muito esforço. E pode apostar que é isso mesmo.
Para criar essas animações o browser basicamente se comporta como outros softwares que reproduzem vídeo, gerando uma sequência de imagens e renderizando elas na tela do seu dispositivo.</description>
    </item>
    
    <item>
      <title>Cache busting: entrega inteligente de assets</title>
      <link>http://localhost/jhonny-roger/public/cache-busting-entrega-inteligente-de-assets/</link>
      <pubDate>Thu, 18 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/cache-busting-entrega-inteligente-de-assets/</guid>
      <description>Definição Cache busting nada mais é do que uma técnica para contornar o problema do carregamento de versões antigas dos assets armazenados em cache no navegador do cliente.
Problema Na verdade, essa é uma questão de longa data. Muitos desenvolvedores utilizam-se do incremento de variáveis com códigos aleatórios no final das chamadas (querystrings) dos assets para contornar o problema, o que, de acordo com Steve Souders, guru em performance de sites na web, não é uma boa prática.</description>
    </item>
    
    <item>
      <title>HTTP2 para Desenvolvedores de Web</title>
      <link>http://localhost/jhonny-roger/public/http2-para-desenvolvedores-de-web/</link>
      <pubDate>Tue, 21 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/http2-para-desenvolvedores-de-web/</guid>
      <description>HTTP2 significa uma mudança na forma como construímos websites. As boas práticas de HTTP1 são prejudiciais no mundo do HTTP2.
 HTTP1 é lento e ineficiente para a maioria dos casos de uso de hoje na web.
 HTTP1.x é a versão do HTTP que nós já conhecemos quando entramos o endereço de um site. É um protocolo antigo que foi concebido antes mesmo de sabermos o que essa imensa rede mundial de computadores se tornaria.</description>
    </item>
    
    <item>
      <title>Otimize a performance do seu site com o Kraken</title>
      <link>http://localhost/jhonny-roger/public/otimize-performance-seu-site-com-o-kraken/</link>
      <pubDate>Tue, 14 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/otimize-performance-seu-site-com-o-kraken/</guid>
      <description>Quando o assunto é performance, você ainda pode ter muita dor de cabeça. É comum muitos sites e aplicações web terem a sua experiência deformada por problemas na performance. Há tempos procuramos métodos para otimizar nossos sites, tais como concatenação de arquivos para diminuir as requisições HTTP, minificar CSS, JavaScript e até mesmo HTML. Entre várias outras técnicas. Porém, cada vez mais essas técnicas não conseguem acompanhar os novos recursos que sempre estão surgindo para deixar nossos sites cada vez mais impressionantes.</description>
    </item>
    
    <item>
      <title>Entendendo o Event Delegation da função on() no jQuery</title>
      <link>http://localhost/jhonny-roger/public/entendendo-o-event-delegation-jquery/</link>
      <pubDate>Mon, 02 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/entendendo-o-event-delegation-jquery/</guid>
      <description>Geralmente uma &amp;#8220;delegação&amp;#8221;, que seria a uma tradução livre para delegation, significa definir um evento para um elemento pai, que será disparado para todos os seus filhos. O evento vai funcionar para qualquer elemento filho que já existir e também para os que forem adicionados posteriormente na árvore do DOM.
Para exemplificar, entenda o código abaixo. Ele apenas muda o texto do parágrafo quando clicamos em alguma opção do menu. É um uso simples da função on(&#39;click&#39;) do jQuery:</description>
    </item>
    
    <item>
      <title>Como perder peso (no browser)</title>
      <link>http://localhost/jhonny-roger/public/como-perder-peso-no-browser/</link>
      <pubDate>Fri, 23 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/como-perder-peso-no-browser/</guid>
      <description>Nós desenvolvedores falamos tanto das novidades do HTML5, CSS3, EcmaScript 6 que acabamos esquecendo de falar de outras coisas também muito importantes, mas que não são tão novidade assim, como performance.
Depois de muito esforço, finalmente lançamos um guia definitivo sobre o assunto chamado browserdiet.com e vim compartilhar um pouco da experiência de ter liderado esse projeto irado.
Motivação O ano de 2012 foi um ano bem diferente pra mim, passei 1&amp;frasl;3 dele viajando e me deparei com muita conexão ruim em hotel e aeroporto.</description>
    </item>
    
    <item>
      <title>Latência, largura de banda e a velocidade da luz</title>
      <link>http://localhost/jhonny-roger/public/latencia-largura-de-banda-e-a-velocidade-da-luz/</link>
      <pubDate>Wed, 01 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/latencia-largura-de-banda-e-a-velocidade-da-luz/</guid>
      <description>Será que se aumentarmos a banda da nossa internet de 5Mbps para 10Mbps teremos o dobro de velocidade na navegação de páginas na Web?
Comecei esse post com uma pergunta de propósito e espero que você possa responder essa questão ao final da leitura.
Hoje enfrentamos um grande problema em todos os sistemas de rede que basicamente é a velocidade de uma informação sair de um ponto e chegar a outro, esse tempo de viagem da tal informação entre dois pontos é o que chamamos de latência.</description>
    </item>
    
    <item>
      <title>Medindo performance e latência com a Navigation Timing API</title>
      <link>http://localhost/jhonny-roger/public/navigation-timing-api/</link>
      <pubDate>Thu, 14 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/navigation-timing-api/</guid>
      <description>Performance e latência são alguns dos requisitos de qualidade e experiência do usuário mais desafiadores em desenvolvimento web, especialmente quanto à performance client-side.Sabemos como aplicar técnicas que melhoram muito a performance da página, mas medir o desempenho adequadamente já não é tão trivial à nossa rotina de desenvolvimento. Pensando nisso, o W3C tem uma nova recomendação chamada Navigation Timing API. Com isso, é possível obter métricas e estatísticas detalhadas de modo nativo sobre tempo de carregamento, navegação entre páginas e carregamento de eventos.</description>
    </item>
    
    <item>
      <title>Performance front-end – Parte 2</title>
      <link>http://localhost/jhonny-roger/public/performance-frontend-parte2/</link>
      <pubDate>Mon, 28 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/performance-frontend-parte2/</guid>
      <description>Se você ainda não leu a primeira parte desse assunto, veja aqui: Performance front-end &amp;#8211; Parte 1.
Os browsers ajudam em muitos sentidos otimizando o carregamento de assets e a renderização da página, mesmo assim é necessário fazer algumas tarefas para que sua aplicação/website carregue mais rápido.
Quando colocamos a performance como uma tarefa durante o desenvolvimento, determinamos o aumento ou a diminuição da conversão e da quantidade de pageviews.</description>
    </item>
    
    <item>
      <title>jQuery: dicas de otimização e performance</title>
      <link>http://localhost/jhonny-roger/public/jquery-dicas-de-otimizacao-e-performance/</link>
      <pubDate>Tue, 10 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/jquery-dicas-de-otimizacao-e-performance/</guid>
      <description>A grande maioria dos desenvolvedores jQuery não se preocupa muito com performance e otimização. Afinal, o mantra do framework, &amp;#8220;write less, do more&amp;#8221;, envolve esconder a parte feia do Javascript e, muitas vezes, acrescentar camadas desnecessárias.
Neste artigo apresento algumas dicas de como melhorar a performance de sua aplicação jQuery. No entanto, vale lembrar que não é necessário otimizar nenhum código escrito previamente, já que a otimização dificilmente compensará o trabalho.</description>
    </item>
    
    <item>
      <title>Entendendo os Reflows</title>
      <link>http://localhost/jhonny-roger/public/entendendo-os-reflows-2/</link>
      <pubDate>Mon, 18 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/entendendo-os-reflows-2/</guid>
      <description>Reflow é um assunto extenso e necessário. Ele sempre vai existir nos navegadores, então temos que entendê-lo para saber como utilizá-lo de maneira racional. O mais legal é entender todo o contexto sobre o que são e como funcionam, para a partir daí repensar o código que renderizamos no navegador para obtermos maior performance.
Reflow é o resultado de um evento que desencadeia mudanças no jeito que a pagina deve ser renderizada, tomando tempo para cálculo e reposicionamento de elementos.</description>
    </item>
    
    <item>
      <title>Performance do seu CSS</title>
      <link>http://localhost/jhonny-roger/public/melhorando-performance-css/</link>
      <pubDate>Tue, 29 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/melhorando-performance-css/</guid>
      <description>Modular seu código CSS é uma boa prática para que o website carregue apenas o código necessário para montar a pagina que o visitante está. Por isso não precisamos carregar o código CSS que monta a página de contato uma vez que o usuário está na home, possibilitando um ganho de performance.
Podemos ainda melhorar um pouco mais nossa performance tendo atenção com a forma que escrevemos os seletores do CSS.</description>
    </item>
    
  </channel>
</rss>