<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Doctrine on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/tags/doctrine/</link>
    <description>Recent content in Doctrine on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 08 May 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/tags/doctrine/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PHPUnit – persistência e configurações avançadas</title>
      <link>http://localhost/jhonny-roger/public/phpunit-persistencia-e-configuracoes-avancadas/</link>
      <pubDate>Thu, 08 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/phpunit-persistencia-e-configuracoes-avancadas/</guid>
      <description>Neste artigo você verá como utilizar o PHPUnit para realizar testes com persistência de dados utilizando o Doctrine um ORM open-source e como definir configurações avançadas para personalizar sua suíte de testes e gerar relatórios de testes executados bem como cobertura do código de produção.
Começando Para começar o projeto crie um arquivo chamado composer.json. Nele listaremos todos os pacotes/bibliotecas de terceiros que utilizaremos. Para este post utilizaremos o Doctrine e vários elementos do Zend Framework 2 além de é claro o próprio PHPUnit.</description>
    </item>
    
  </channel>
</rss>