<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Codigo on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/tags/codigo/</link>
    <description>Recent content in Codigo on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 17 Sep 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/tags/codigo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Como boas pr√°ticas de escrita de c√≥digo podem influenciar em uma melhor rotina de¬†trabalho</title>
      <link>http://localhost/jhonny-roger/public/como-boas-praticas-de-escrita-de-codigo-podem-influenciar-em-uma-melhor-rotina-de-trabalho/</link>
      <pubDate>Sat, 17 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/como-boas-praticas-de-escrita-de-codigo-podem-influenciar-em-uma-melhor-rotina-de-trabalho/</guid>
      <description>Observei que alguns itens est√£o me ajudando na rotina de trabalho, como obter um melhor tempo de produ√ß√£o e um melhor controle sobre o que estou fazendo.
S√£o alguns h√°bitos simples que podem lhe ajudar muito. √â apenas quest√£o de implementar no seu dia a dia e demonstrar para a sua equipe (caso trabalhe em equipe) o quanto √© mais organizado e produtivo trabalhar desta forma.
A seguir listei algumas t√©cnicas que podem ajudar bastante no seu dia a dia como desenvolvedor front-end.</description>
    </item>
    
    <item>
      <title>Como se tornar um dev front-end</title>
      <link>http://localhost/jhonny-roger/public/tornar-dev-front-end/</link>
      <pubDate>Wed, 09 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/tornar-dev-front-end/</guid>
      <description>Esse artigo inspirou um livro, mais completo, com mais assuntos e detalhes. Olha s√≥: Guia Front-end.
Estava navegando por a√≠ e acabei encontrando um artigo bem legal do Leandro Oriente, que fala sobre um assunto muito interessante e que sempre me perguntam por a√≠. Decidi ent√£o escrever minha vers√£o do artigo, colocando meus pontos de vista sobre como se tornar um desenvolvedor front-end.
Entrar na √°rea de front-end √© algo muito f√°cil.</description>
    </item>
    
    <item>
      <title>Emmet LiveStyle</title>
      <link>http://localhost/jhonny-roger/public/emmet-livestyle/</link>
      <pubDate>Tue, 06 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/emmet-livestyle/</guid>
      <description>Dos mesmos criadores de Emmet, conhe√ßa o Emmet LiveStyle.
O Emmet LiveStyle √© um plugin que permite que ao editar o c√≥digo CSS voc√™ veja as altera√ß√µes na hora, on the fly!
A iniciativa √© simples e voc√™ j√° deve ter visto milhares de outras iniciativas, mas agora eu acho que fizeram do jeito correto. A ideia de um editor bidirecional √© que a partir do momento que voc√™ edita o c√≥digo CSS, voc√™ consegue ver as altera√ß√µes na hora, economizando o tempo de alternar janelas, salvar arquivos e etc.</description>
    </item>
    
    <item>
      <title>Medindo a complexidade do seu c√≥digo JavaScript</title>
      <link>http://localhost/jhonny-roger/public/medindo-a-complexidade-ciclomatica-do-seu-codigo-javascript/</link>
      <pubDate>Tue, 18 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/medindo-a-complexidade-ciclomatica-do-seu-codigo-javascript/</guid>
      <description>J√° mostramos aqui no Tableless ferramentas para testes e ferramentas para garantir o padr√£o do seu c√≥digo JavaScript, mas, enquanto esses utilit√°rios asseguram uma consist√™ncia maior, eles nem sempre acabam com complexidades desnecess√°rias.
Neste artigo vamos falar sobre complexidade ciclom√°tica e mostrar uma ferramenta para an√°lise de c√≥digos JavaScript, a biblioteca Plato.
Complexidade Ciclom√°tica  A primeira regra de fun√ß√µes √© que elas devem ser pequenas. A segunda regra de fun√ß√µes √© que elas devem ser ainda menores.</description>
    </item>
    
    <item>
      <title>Iniciando no GIT ‚Äì Parte 1</title>
      <link>http://localhost/jhonny-roger/public/iniciando-no-git-parte-1/</link>
      <pubDate>Mon, 19 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/iniciando-no-git-parte-1/</guid>
      <description>N√£o esque√ßa de ler a segunda parte desse artigo.
Se voc√™ n√£o trabalha com nenhum controle de vers√£o ainda ou nem sabe o que isso significa, d√° uma lida nesse texto antes de come√ßarmos aqui.
Controles de vers√£o s√£o sistemas que controlam o c√≥digo gerado em projetos. Se voc√™ e mais algu√©m precisam editar o mesmo arquivo em um mesmo projeto, como voc√™ faz? Espera o primeiro editar, salvar e depois subir no FTP s√≥ para a√≠ ent√£o voc√™ abrir o arquivo e fazer suas altera√ß√µes?</description>
    </item>
    
    <item>
      <title>Assegurando a qualidade do seu c√≥digo JavaScript</title>
      <link>http://localhost/jhonny-roger/public/qualidade-codigo-javascript/</link>
      <pubDate>Mon, 09 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/qualidade-codigo-javascript/</guid>
      <description>Enquanto testes automatizados asseguram o funcionamento de suas aplica√ß√µes e, portanto, tamb√©m a qualidade, algumas ferramentas atuam em outra √°rea importante do seu c√≥digo: a sintaxe.
Ferramentas de lint s√£o scripts que interpretam seus arquivos javascript e buscam erros como var√°veis n√£o utilizadas, espa√ßos em branco no final de linha, aus√™ncia de ponto-e-v√≠rgula (um ponto pol√™mico) entre outros.
Abaixo voc√™ encontra alguns utilit√°rios que buscam garantir melhor qualidade e padr√£o para seus c√≥digos.</description>
    </item>
    
    <item>
      <title>N√£o ‚Äúotimize‚Äù seu c√≥digo</title>
      <link>http://localhost/jhonny-roger/public/nao-otimize-seu-codigo/</link>
      <pubDate>Sun, 09 Nov 2008 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/nao-otimize-seu-codigo/</guid>
      <description>&lt;p&gt;Quando faz√≠amos sites com tabelas, o grande problema era a quantidade de c√≥digo que escrev√≠amos. Naquele tempo ‚Äì 1996, 97, 98 ‚Äì t√≠nhamos outros pontos que precisavam de uma aten√ß√£o maior. A conex√£o era lerda para todo mundo e isso dificultava um bocado as coisas. Por isso, fazer um site pesado era fora de cogita√ß√£o. Fic√°vamos ‚Äúmendigando‚Äù cada byte para que o site ficasse mil√©simos de segundo mais r√°pido.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Podcast Tableless #21 ‚Äì Desenvolvimento em camadas</title>
      <link>http://localhost/jhonny-roger/public/podcast-tableless-21-desenvolvimento-em-camadas/</link>
      <pubDate>Thu, 17 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/podcast-tableless-21-desenvolvimento-em-camadas/</guid>
      <description>O Tableless est√° tentando voltar com os podcasts. Para me ajudar nesta empreitada &amp;#8211; que promete ser firme e semanal! üòÆ &amp;#8211; chamei o Bruno Torres.
Estamos tentando remodelar o podcast para que possamos fazer toda semana. N√£o iremos passar tempo dissecando v√°rios assuntos longos, mas vamos sempre bater papo sobre um assunto espec√≠fico, que seja de interesse geral. Isso far√° com que o tempo do podcast fique menor e mais relevante.</description>
    </item>
    
  </channel>
</rss>