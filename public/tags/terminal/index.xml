<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terminal on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/tags/terminal/</link>
    <description>Recent content in Terminal on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 03 Mar 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/tags/terminal/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Editor Vim – Encontrar e Substituir</title>
      <link>http://localhost/jhonny-roger/public/editor-vim-encontrar-e-substituir/</link>
      <pubDate>Tue, 03 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/editor-vim-encontrar-e-substituir/</guid>
      <description>Quem nunca precisou acessar o servidor de um cliente via SSH para resolver um problema de última hora? Um parâmetro errado, uma vírgula faltando pode comprometer a execução de um código.
Quando se tem apenas a tela preta do terminal, é preciso ter conhecimento de alguns comandos muito úteis que podem te ajudar a resolver um problema rapidamente, principalmente se você não tem um computador disponível, podendo também resolver o problema até pelo celular com qualquer App de conexão SSH.</description>
    </item>
    
    <item>
      <title>Comandos iniciais do Git</title>
      <link>http://localhost/jhonny-roger/public/alguns-comandos-git/</link>
      <pubDate>Fri, 09 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/alguns-comandos-git/</guid>
      <description>O Git é um sistema de controle de versão. Com o Git você não perderá seu trabalho, vai poder voltar para a versões anteriores, recuperando a versão do seu código de antes de ter cometido o erro e poderá criar e trabalhar diversas versões em paralelo.
Uma ótima leitura que indico é o livro Pro Git, escrito por Scott Chacon. Ele descreve corretamente sobre o controle de versão. Olhe só:</description>
    </item>
    
    <item>
      <title>Criando comandos de atalhos no terminal</title>
      <link>http://localhost/jhonny-roger/public/criando-comandos-de-atalhos-no-terminal/</link>
      <pubDate>Sun, 14 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/criando-comandos-de-atalhos-no-terminal/</guid>
      <description>Esta dica pode ser utilizada em qualquer distribuição Linux ou Mac OS X.
Se você está cansado de digitar comandos gigantescos no terminal, aqui vai uma dica: crie atalhos para os comandos no seu terminal para melhorar a produtividade. Uma dica simples mas é muito util.
Para rodar um projeto python/django, geralmente executamos este comando:
python manage.py runserver  Com o comando de atalho criado, execute-o desta maneira:
run Criando os atalhos Para começar a criar seus atalhos, abra o arquivo .</description>
    </item>
    
  </channel>
</rss>