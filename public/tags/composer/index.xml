<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Composer on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/tags/composer/</link>
    <description>Recent content in Composer on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 13 Jan 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/tags/composer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Instalando Laravel 5.2</title>
      <link>http://localhost/jhonny-roger/public/instalando-laravel-5-2/</link>
      <pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/instalando-laravel-5-2/</guid>
      <description>Neste artigo irei demonstrar como instalar e começar a utilizar o Laravel 5.2, framework que vem ganhando visibilidade no mercado.
O que iremos utilizar: Composer   Requisitos do servidor: PHP versão maior ou igual a 5.5.9;  OpenSSL PHP Extension;  PDO PHP Extension;  Mbstring PHP Extension;  Tokenizer PHP Extension;   Instalando o Composer Na pasta onde localiza-se a aplicação, abra o terminal e digite: #Caso tenha o Curl instalado curl -s https://getcomposer.</description>
    </item>
    
    <item>
      <title>Conhecendo e instalando o Silex</title>
      <link>http://localhost/jhonny-roger/public/conhecendo-e-instalando-o-silex/</link>
      <pubDate>Tue, 30 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/conhecendo-e-instalando-o-silex/</guid>
      <description>O Silex é um micro framework baseado nos componentes do Symfony. Foi desenvolvido por Fabien Potencier, o mesmo criador do Symfony.
O Silex foi concebido para a criação de aplicações pequenas com foco na agilidade, extensibilidade e para ser facilmente testável. Ele provê um sistema de rotas muito poderoso, e se propõe a resolvê-las através dos Services e Providers, conceitos que veremos mais à frente. Você perceberá que ele é facilmente estendido e suas funcionalidades recebem uma vantagem através dessas integrações.</description>
    </item>
    
    <item>
      <title>Entendendo o padrão MVC na prática</title>
      <link>http://localhost/jhonny-roger/public/entendendo-o-padrao-mvc-na-pratica/</link>
      <pubDate>Thu, 25 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/entendendo-o-padrao-mvc-na-pratica/</guid>
      <description>&lt;p&gt;Práticas modernas do PHP exigem estudo e preparação, e o padrão de projeto que merece muita atenção é o MVC. Muita gente conhece este padrão através dos &lt;em&gt;frameworks&lt;/em&gt; (isso não é um problema, eu mesmo estou neste grupo), mas ir a fundo é essencial para evitar erros e falar coisas como:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Seu MVC está errado, o &lt;em&gt;controller&lt;/em&gt; está maior que o &lt;em&gt;model&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Este erro de definição acontece pois em nenhum lugar está escrito que a quantidade de linhas define o padrão MVC, mas vamos entender isto melhor?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Instalando o CAKEPHP 3.0 via Composer</title>
      <link>http://localhost/jhonny-roger/public/instalando-o-cakephp-3-0-via-composer/</link>
      <pubDate>Sun, 07 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/instalando-o-cakephp-3-0-via-composer/</guid>
      <description>Requisitos do tutorial:
 PHP instalado e configurado Ambiente Linux  No dia 22/03/2015 foi disponibilizado para download no site do CakePHP a versão 3.0 do framework para PHP CakePHP. Já utilizamos a versão 2.x em projetos aqui na empresa e tivemos bons resultados.
Com o lançamento desta nova versão, muita coisa mudou: um novo ORM foi lançado; o uso de namespaces foi adotado; entre outras features que iremos abordar em outras publicações.</description>
    </item>
    
    <item>
      <title>PHPUnit – persistência e configurações avançadas</title>
      <link>http://localhost/jhonny-roger/public/phpunit-persistencia-e-configuracoes-avancadas/</link>
      <pubDate>Thu, 08 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/phpunit-persistencia-e-configuracoes-avancadas/</guid>
      <description>Neste artigo você verá como utilizar o PHPUnit para realizar testes com persistência de dados utilizando o Doctrine um ORM open-source e como definir configurações avançadas para personalizar sua suíte de testes e gerar relatórios de testes executados bem como cobertura do código de produção.
Começando Para começar o projeto crie um arquivo chamado composer.json. Nele listaremos todos os pacotes/bibliotecas de terceiros que utilizaremos. Para este post utilizaremos o Doctrine e vários elementos do Zend Framework 2 além de é claro o próprio PHPUnit.</description>
    </item>
    
    <item>
      <title>Composer – um pouco além do básico</title>
      <link>http://localhost/jhonny-roger/public/composer-um-pouco-alem-basico/</link>
      <pubDate>Tue, 01 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/composer-um-pouco-alem-basico/</guid>
      <description>No post anterior expliquei o que vem a ser o composer, como baixar, criar o arquivo de configurações e instalar pacotes ou bibliotecas. Agora veremos algumas questões um pouco mais avançadas sobre o uso do composer.
Instalação global O composer suporta instalação global para que seja utilizado apenas um &amp;#8220;executável&amp;#8221; para todo e qualquer projeto. Usei o termo executável pois refere-se ao composer.phar, que como explicado no post anterior é uma forma de empacotamento no PHP que transforma a aplicação toda em um único arquivo que é facilmente executável em qualquer local de seu sistema operacional.</description>
    </item>
    
    <item>
      <title>Composer para iniciantes</title>
      <link>http://localhost/jhonny-roger/public/composer-para-iniciantes/</link>
      <pubDate>Tue, 18 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/composer-para-iniciantes/</guid>
      <description>Composer é uma ferramenta para gerenciamento de dependências para o PHP que vem ganhando espaço e se tornando cada vez mais indispensável. Com algumas poucas linhas de configurações você define todas as bibliotecas de terceiros ou mesmo suas que deseja/precisa utilizar em seu projeto, o composer encarrega-se de baixá-las e criar um autoloader deixando-as prontas para uso.
Para muitos o composer ainda é um mistério então o intuito deste post é mostrar ao usuário que ainda não conhece como baixar, configurar e utilizar o composer de forma básica.</description>
    </item>
    
  </channel>
</rss>