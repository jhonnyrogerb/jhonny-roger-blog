<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pre Processador on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/tags/pre-processador/</link>
    <description>Recent content in Pre Processador on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 18 Aug 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/tags/pre-processador/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Instalando SASS na máquina – video</title>
      <link>http://localhost/jhonny-roger/public/instalando-sass-na-maquina-video/</link>
      <pubDate>Mon, 18 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/instalando-sass-na-maquina-video/</guid>
      <description>Se você quiser usar um pré-processador em seus projetos, aqui vão instruções simples para você começar agora. Darei mais atenção para quem usa Mac porque é o sistema que eu uso. Mas no Windows as instruções são quase as mesmas, principalmente se você for usar algum sistema que gerencia os assets. Também estou abordando aqui apenas o SASS, nada de LESS, Style ou qualquer outro pré-processador. Depois desse disclaimer, vamos ao que interessa.</description>
    </item>
    
    <item>
      <title>Utilizando Map Structure do Sass</title>
      <link>http://localhost/jhonny-roger/public/utilizando-maps-sass/</link>
      <pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/utilizando-maps-sass/</guid>
      <description>O Sass é um pré-processador usado para melhorar sua produtividade ao codificar CSS. Dentre as várias funcionalidades, existe uma chamada maps.
O maps é como um array de variáveis. Ela guarda uma série de chaves com valores. A sintaxe é bastante comum, veja:
$map: ( key1: value1, key2: value2, key3: value3 );  A primeira vista se parece com Json, né?
A ideia é que você consiga pegar o valor de qualquer chave que está dentro do seu mapa e usar em momentos onde você irá repetir bastante código.</description>
    </item>
    
  </channel>
</rss>