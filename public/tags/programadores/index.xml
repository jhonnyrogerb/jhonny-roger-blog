<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programadores on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/tags/programadores/</link>
    <description>Recent content in Programadores on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 29 Nov 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/tags/programadores/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Por que Desenvolvedores/Programadores usam Twitter?</title>
      <link>http://localhost/jhonny-roger/public/por-que-desenvolvedoresprogramadores-usam-twitter/</link>
      <pubDate>Tue, 29 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/por-que-desenvolvedoresprogramadores-usam-twitter/</guid>
      <description>{.graf.graf&amp;ndash;h3} Nos últimos 4 meses a comunidade Java Bahia me fez andar por varias universidades/faculdades e em todas elas perguntamos (não andei sozinho por aí) durante as palestras quem tinha costume de usar o Twitter. Infelizmente não tive o insight de fazer uma estatística disso, mas deu para notar que poucos desenvolvedores/programadores possuem o costume de frequentar a rede social. Muito provavelmente essa galera passou pela mesma experiência que eu tive nas minhas duas primeiras tentativas.</description>
    </item>
    
    <item>
      <title>Por que Python?</title>
      <link>http://localhost/jhonny-roger/public/por-que-python/</link>
      <pubDate>Tue, 29 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/por-que-python/</guid>
      <description>Eu sou apaixonado por Python. Muito. Daquele tipo que fala de Python sempre que pode. E uma pergunta que sempre me fazem é: por quê? Vou tentar fazer uma lista dos motivos mais relevantes:
1. É muito bom escrever código Python Geralmente, quando alguém cria uma linguagem de programação, tem em vista um objetivo. Por exemplo, Lisp foi escrita para programação funcional. Java foi escrita para que o mesmo código pudesse rodar em qualquer lugar.</description>
    </item>
    
    <item>
      <title>Front-end, UX e Back-end</title>
      <link>http://localhost/jhonny-roger/public/front-end-ux-e-back-end/</link>
      <pubDate>Wed, 16 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/front-end-ux-e-back-end/</guid>
      <description>“One of the reasons for poor design execution is that UX teams need to own more than just design. We need to own front-end development.”
 Frase sensacional em um artigo do site UXMatters, um dos melhores sites sobre experiência do usuário e arquitetura de informação que tenho nas minhas leituras regulares.
Os designers para web precisam muito aprender a linguagem com que seus layouts serão codificados. Na minha opinião é estranho um designer para web não entender HTML e CSS, pelo menos o básico, o suficiente.</description>
    </item>
    
    <item>
      <title>Animando com jQuery</title>
      <link>http://localhost/jhonny-roger/public/animando-com-jquery/</link>
      <pubDate>Mon, 05 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/animando-com-jquery/</guid>
      <description>Um dos recursos mais procurados pelos designers (e programadores) em bibliotecas é animação. Existem bibliotecas e mais bibliotecas que fazem animações de diversas formas. Em prototype por exemplo, deve-se anexar a biblioteca scriptaculous para que seja possivel realizar animações. Já em mootools existem várias formas de resolver o mesmo problema, sendo assim um pouco mais complicado de lembrar de tudo isso. Por jQuery ser uma biblioteca simples com somente o funcional, o trabalho se torna mais simples, logo mais rápido de desenvolver as soluções.</description>
    </item>
    
  </channel>
</rss>