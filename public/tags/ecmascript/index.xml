<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ecmascript on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/tags/ecmascript/</link>
    <description>Recent content in Ecmascript on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 08 Nov 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/tags/ecmascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Trabalhando com serviços no Javascript</title>
      <link>http://localhost/jhonny-roger/public/trabalhando-com-servicos-no-javascript/</link>
      <pubDate>Tue, 08 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/trabalhando-com-servicos-no-javascript/</guid>
      <description>JavaScript é uma linguagem multiparadigma. Pode-se “_emular_” várias técnicas de programação com ele, e isso é incrível pois podemos decidir qual o melhor paradigma para a resolução dos problemas dos nossos projetos. Porém se por um lado isso pode parecer poderoso para a linguagem, também pode deixar os iniciantes bem confusos, é muito comum escolher a abordagem errada para o problema. Por esse motivo que o JavaScript em sido polêmico nos últimos anos.</description>
    </item>
    
    <item>
      <title>ECMAScript 6, uma breve introdução à POO</title>
      <link>http://localhost/jhonny-roger/public/ecmascript-6-uma-breve-introducao-a-poo/</link>
      <pubDate>Mon, 15 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/ecmascript-6-uma-breve-introducao-a-poo/</guid>
      <description>Bom galera, já falei aqui no tableless, sobre o uso de classes na ECMAScript 6, porém, foram exemplos bem superficiais. Então decidi criar um exemplo mais prático de como utilizá-la. Você pode encontrar o artigo que estou falando aqui.
Entendendo o projeto A ideia inicial foi criar uma mini (e põe mini nisso) loja virtual, utilizando dados em JSON.
O que teremos, nada mais é que uma variável contendo dados em JSON e estes dados serão transformados em objetos&amp;#8230; Advinha?</description>
    </item>
    
    <item>
      <title>JavaScript: entendendo o this</title>
      <link>http://localhost/jhonny-roger/public/javascript-entendendo-o-this/</link>
      <pubDate>Thu, 25 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/javascript-entendendo-o-this/</guid>
      <description>O operador this é um dos maiores responsáveis por erros e pegadinhas em um código JavaScript. Entender o seu mecanismo de funcionamento e criação é um grande passo para tirar maior proveito da linguagem.
Contexto de execução Toda função JavaScript, ao ser executada, gera uma associação do objeto criado pelo interpretador através da palavra reservada this. A especificação da ECMAScript chama isso de ThisBinding, um evento que acontece toda vez que um código JavaScript é executado e um novo contexto de execução é estabelecido.</description>
    </item>
    
  </channel>
</rss>