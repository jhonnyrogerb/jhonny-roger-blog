<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clovis Neto on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/author/clovis-neto/</link>
    <description>Recent content in Clovis Neto on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 13 Oct 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/author/clovis-neto/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>All Animation CSS3 – Criar animações CSS3 nunca foi tão fácil</title>
      <link>http://localhost/jhonny-roger/public/animation-css3-criar-animacoes-css3-nunca-foi-tao-facil/</link>
      <pubDate>Mon, 13 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/animation-css3-criar-animacoes-css3-nunca-foi-tao-facil/</guid>
      <description>Criar animações para nossos websites era algo &amp;#8220;impensável&amp;#8221; no passado. Com o surgimento do CSS3 e a morte do flash, a criação de websites dinâmicos, animados e leves, foi ficando cada vez mais fácil. Quem diria que há 7 anos atrás poderíamos alterar nossas animações para web sem precisar ter o flash instalado na nossa máquina ou até mesmo criar sites com efeitos paralax? Os devs antigos sabem bem o que estou querendo dizer.</description>
    </item>
    
    <item>
      <title>Web Speech API – Reconhecimento de voz com JavaScript</title>
      <link>http://localhost/jhonny-roger/public/web-speech-api-reconhecimento-de-voz-com-javascript/</link>
      <pubDate>Mon, 06 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/web-speech-api-reconhecimento-de-voz-com-javascript/</guid>
      <description>O reconhecimento de voz tem várias aplicações no mundo real. Muitas pessoas tornaram-se familiarizadas com este conceito graças a softwares como o Siri e S-Voice. Esta aplicação pode melhorar drasticamente a usabilidade dos websites, principalmente para deficientes visuais. Imagine websites onde os usuários podem navegar pelas páginas ou preencher campos de formulário usando a sua voz e até mesmo interagir com a página enquanto dirige, sem tirar os olhos da estrada.</description>
    </item>
    
    <item>
      <title>Construindo sua própria biblioteca javascript</title>
      <link>http://localhost/jhonny-roger/public/construindo-sua-propria-biblioteca-javascript/</link>
      <pubDate>Mon, 07 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/construindo-sua-propria-biblioteca-javascript/</guid>
      <description>Pois bem, meu amigo ninja, está na hora de melhorar um pouco mais seus conhecimentos e quem sabe embarcar em uma nova ideia: a criação da sua própria biblioteca javascript!
Introdução Antes de você pensar: “Ah, mas eu já sei como é. Basta estender o objeto HTMLElement por meio da prototype…”. Digo-lhes que felizmente não é assim. Imagine o peso que seria colocar um novo método em todos os elementos HTML.</description>
    </item>
    
    <item>
      <title>Dominando o uso de prototype em JavaScript</title>
      <link>http://localhost/jhonny-roger/public/dominando-o-uso-de-prototype-em-javascript/</link>
      <pubDate>Sat, 14 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/dominando-o-uso-de-prototype-em-javascript/</guid>
      <description>Vários desenvolvedores web falam que protótipos representam uma forma de definirmos tipos de objetos, mas se você observar com cuidado, isto é uma característica de funções.
Perceba que todas as funções têm uma propriedade prototype que, inicialmente, referencia um objeto vazio.
Usando a palavra chave New para invocar a função construtor, temos agora um objeto recém instanciado como seu contexto.
Ex:
function Lutador(){} var lutador1 = new Lutador(); O básico &amp;#8211; Incluindo métodos numa classe (função) Temos nossa classe Lutador, que se encontra vazia e queremos anexar um método a ela.</description>
    </item>
    
    <item>
      <title>Criando slideshow do zero com javascript puro</title>
      <link>http://localhost/jhonny-roger/public/criando-slideshow-zero-com-javascript-puro-2/</link>
      <pubDate>Sat, 15 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/criando-slideshow-zero-com-javascript-puro-2/</guid>
      <description>Depois de criar um artigo no devmedia de como criar um slideshow do zero em Jquery sem plugins, recebi vários pedidos para fazer o mesmo com javascript, também pude notar que muitas pessoas estavam com dificuldade em colocar link nas imagens e os botões de anterior/próximo. Veremos neste artigo como criar um slideshow do zero apenas com javascript e uma dose elegante de CSS3, com controladores, legendas e links nas imagens.</description>
    </item>
    
    <item>
      <title>Criando efeito de fadeIn e fadeOut com javascript puro</title>
      <link>http://localhost/jhonny-roger/public/criando-efeito-de-fadein-e-fadeout-com-javascript-puro/</link>
      <pubDate>Wed, 29 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/criando-efeito-de-fadein-e-fadeout-com-javascript-puro/</guid>
      <description>O uso de bibliotecas JavaScript vem crescendo muito atualmente, mas às vezes utilizamos certas bibliotecas (como a jQuery) para simples tarefas, que poderíamos fazer apenas com JavaScript.
Vejamos na Listagem 1 o que acontece muito nas páginas da web de hoje.
Listagem 1: Pegando o atributo src de uma imagem com jQuery
$(&#34;#imagem&#34;).attr(&#34;src&#34;); Poderíamos usar simplesmente o JavaScript para ter o mesmo resultado usando o código da Listagem 2.</description>
    </item>
    
  </channel>
</rss>