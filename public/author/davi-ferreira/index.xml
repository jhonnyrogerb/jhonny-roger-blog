<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Davi Ferreira on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/author/davi-ferreira/</link>
    <description>Recent content in Davi Ferreira on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 17 Sep 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/author/davi-ferreira/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>React: JavaScript reativo</title>
      <link>http://localhost/jhonny-roger/public/react-javascript-reativo/</link>
      <pubDate>Tue, 17 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/react-javascript-reativo/</guid>
      <description>Uma das palestras que chamou minha atenção na BrazilJS desse ano foi a de Stoyan Stefanov, autor do clássico JavaScript Patterns. Stoyan mostrou a biblioteca React, desenvolvida pelo pessoal do Facebook/Instagram.
Apesar de não ser um palestrante muito carismático, o código mostrado por Stoyan me deixou com a pulga atrás da orelha por possuir uma sintaxe para lá de esquisita e por fugir um pouco da abordagem mais conservadora adotada por bibliotecas e frameworks do mercado.</description>
    </item>
    
    <item>
      <title>JavaScript: entendendo o this</title>
      <link>http://localhost/jhonny-roger/public/javascript-entendendo-o-this/</link>
      <pubDate>Thu, 25 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/javascript-entendendo-o-this/</guid>
      <description>O operador this é um dos maiores responsáveis por erros e pegadinhas em um código JavaScript. Entender o seu mecanismo de funcionamento e criação é um grande passo para tirar maior proveito da linguagem.
Contexto de execução Toda função JavaScript, ao ser executada, gera uma associação do objeto criado pelo interpretador através da palavra reservada this. A especificação da ECMAScript chama isso de ThisBinding, um evento que acontece toda vez que um código JavaScript é executado e um novo contexto de execução é estabelecido.</description>
    </item>
    
    <item>
      <title>O melhor do Codrops</title>
      <link>http://localhost/jhonny-roger/public/o-melhor-do-codrops/</link>
      <pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/o-melhor-do-codrops/</guid>
      <description>Talvez você não reconheça o nome, mas muito provavelmente já clicou em algum link do Codrops, blog sobre desenvolvimento web mantido por Manoela Ilic e Pedro Botelho, com grande foco em interaction design e UX.
Neste artigo compilei os 10 melhores posts de experimentos de interfaces publicados no Codrops. Independente desta seleção, recomendo muito que você perca algumas horas lendo os artigos e conferindo todas as demos do site.</description>
    </item>
    
    <item>
      <title>Medindo a complexidade do seu código JavaScript</title>
      <link>http://localhost/jhonny-roger/public/medindo-a-complexidade-ciclomatica-do-seu-codigo-javascript/</link>
      <pubDate>Tue, 18 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/medindo-a-complexidade-ciclomatica-do-seu-codigo-javascript/</guid>
      <description>Já mostramos aqui no Tableless ferramentas para testes e ferramentas para garantir o padrão do seu código JavaScript, mas, enquanto esses utilitários asseguram uma consistência maior, eles nem sempre acabam com complexidades desnecessárias.
Neste artigo vamos falar sobre complexidade ciclomática e mostrar uma ferramenta para análise de códigos JavaScript, a biblioteca Plato.
Complexidade Ciclomática  A primeira regra de funções é que elas devem ser pequenas. A segunda regra de funções é que elas devem ser ainda menores.</description>
    </item>
    
    <item>
      <title>JavaScript: Objetos Literais vs. Funções Construtoras</title>
      <link>http://localhost/jhonny-roger/public/javascript-objetos-literais-vs-funcoes-construtoras/</link>
      <pubDate>Tue, 04 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/javascript-objetos-literais-vs-funcoes-construtoras/</guid>
      <description>Existem duas maneiras de criar objetos JavaScript e muita gente as confunde ou acha que são a mesma coisa. No entanto, Objetos Literais e Funções Construtoras são conceitos bem diferentes e entendê-los vai fazer com que você tire melhor proveito da linguagem.
Objetos Literais Este é o tipo básico de objetos JavaScript. É o formato popularizado através do JSON (JavaScript Object Notation). O objeto é criado utilizando um par de chaves ({}) e suas propriedades e métodos são todos públicos.</description>
    </item>
    
    <item>
      <title>Elementos de interface utilizando apenas CSS3</title>
      <link>http://localhost/jhonny-roger/public/elementos-de-interface-utilizando-apenas-css3/</link>
      <pubDate>Thu, 09 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/elementos-de-interface-utilizando-apenas-css3/</guid>
      <description>Se por um lado está na hora de você parar de usar jQuery para tudo e investir mais em códigos JavaScript, por outro já é possível criar elementos animados e interativos utilizando apenas CSS3.
É claro que você vai precisar abrir mão de efeitos em navegadores antigos (ou, na maioria dos casos, da implementação inteira). É claro também que as implementações são até certo ponto limitadas em comparação a plugins e bibliotecas JavaScript, mas dão um show em performance e otimização.</description>
    </item>
    
    <item>
      <title>Templates client-side com Mustache.js</title>
      <link>http://localhost/jhonny-roger/public/templates-client-side-com-mustache-js/</link>
      <pubDate>Mon, 15 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/templates-client-side-com-mustache-js/</guid>
      <description>Antes de começarmos, uma pergunta: quem nunca implementou um &amp;#8220;template&amp;#8221; nos moldes do código abaixo?
html = &#39;&amp;lt;li class=&#34;clearfix&#34;&amp;gt;&#39;; html += &#39; &amp;lt;div class=&#34;foto&#34;&amp;gt;&#39;; html += &#39; &amp;lt;a href=&#34;&#39; + item.permalink + &#39;&#34;&amp;gt;&#39;; html += &#39; &amp;lt;img src=&#34;&#39; + item.thumb + &#39;&#34; width=&#34;180&#34; height=&#34;124&#34; alt=&#34;&#39; + item.titulo + &#39;&#34;&amp;gt;&#39;; html += &#39; &amp;lt;/a&amp;gt;&#39;; html += &#39; &amp;lt;/div&amp;gt;&#39;; html += &#39; &amp;lt;span&amp;gt;&#39;; html += item.titulo; html += &#39; &amp;lt;/span&amp;gt;&#39;; html += &#39;&amp;lt;/li&amp;gt;&#39;; Se você ainda faz isso, chegou a hora de parar.</description>
    </item>
    
    <item>
      <title>Zepto.js: JavaScript peso-leve</title>
      <link>http://localhost/jhonny-roger/public/zepto-js-biblioteca-javascript-peso-leve/</link>
      <pubDate>Wed, 20 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/zepto-js-biblioteca-javascript-peso-leve/</guid>
      <description>Em tempos em que performance é muito valorizada, a escolha de bibliotecas e plugins extras influencia diretamente no peso do seu site ou aplicativo.
Com aproximadamente 10kb em sua versão minificada (jQuery, por exemplo, tem 94kb), o framework Zepto.js pode ser o mais indicado para quem deseja melhorar a performance e manter a compatibilidade com a API do jQuery.
Se você sabe jQuery, você já sabe Zepto Além de ser leve, o Zepto.</description>
    </item>
    
    <item>
      <title>Plugins jQuery e bibliotecas JavaScript para e-commerces</title>
      <link>http://localhost/jhonny-roger/public/plugins-jquery-e-bibliotecas-javascript-para-e-commerces/</link>
      <pubDate>Tue, 26 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/plugins-jquery-e-bibliotecas-javascript-para-e-commerces/</guid>
      <description>jQuery.payment https://stripe.com/blog/jquery-payment
O plugin jQuery.payment valida o número dos principais cartões do mercado. Desenvolvido pelo pessoal da Stripe, empresa especializada em uma solução de pagamento para desenvolvedores de e-commerces, o plugin conta com validadores para números de cartão de crédito, data de validade e código de segurança.
Exemplos de uso:
$(&#39;.numero-cartao&#39;).payment(&#39;formatCardNumber&#39;); $(&#39;.expiracao-cartao&#39;).payment(&#39;formatCardExpiry&#39;); $(&#39;.codigo-cartao&#39;).payment(&#39;formatCardCVC&#39;); $(&#39;.numerico&#39;).payment(&#39;restrictNumeric&#39;); É possível também tirar proveito de alguns utilitários que acompanham o plugin e executar tarefas de validação, além de retornar informações do cartão baseado no número e a data de validade como um objeto:</description>
    </item>
    
    <item>
      <title>Reveal.js: criando apresentações no navegador</title>
      <link>http://localhost/jhonny-roger/public/reveal-js-criando-apresentacoes-no-navegador/</link>
      <pubDate>Fri, 15 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/reveal-js-criando-apresentacoes-no-navegador/</guid>
      <description>Apresentações não estão mais limitadas a softwares e plataformas específicas – hoje em dia é possível criar slides utilizando o navegador e tecnologias como HTML5, CSS3 e JavaScript.
Uma das responsáveis por isto é a biblioteca JavaScript reveal.js, criada por Hakim El Hattab, desenvolvedor mais conhecido por seus experimentos com animações CSS3.
Neste artigo vamos criar uma apresentação básica e conhecer as opções disponíveis para personalizar nossos slides.
Estrutura da apresentação Vamos começar fazendo o download da última versão da biblioteca reveal.</description>
    </item>
    
    <item>
      <title>3 ferramentas para criar e gerenciar projetos web</title>
      <link>http://localhost/jhonny-roger/public/3-ferramentas-para-criar-e-gerenciar-projetos-web/</link>
      <pubDate>Tue, 05 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/3-ferramentas-para-criar-e-gerenciar-projetos-web/</guid>
      <description>Já foi o tempo que nossas aplicações web e sites eram compostos apenas por arquivos HTML e um ou outro CSS e JS. Hoje temos pré-processadores CSS, minificadores, ferramentas de validação de JavaScript, grids, boilerplates, bootstraps e até mesmo JavaScript no servidor.
Há também uma maior quantidade de arquivos e bibliotecas externas. Os arquivos CSS foram modularizados e JavaScript passou a ser (muito) mais aceita, ganhando ainda uma versão mais &amp;#8220;amigável&amp;#8221; na linguagem CoffeeScript.</description>
    </item>
    
    <item>
      <title>Criando um plugin JavaScript (sem jQuery!)</title>
      <link>http://localhost/jhonny-roger/public/criando-um-plugin-javascript-sem-jquery/</link>
      <pubDate>Wed, 07 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/criando-um-plugin-javascript-sem-jquery/</guid>
      <description>Neste artigo vamos criar um slider de imagens utilizando apenas JavaScript e CSS3, sem nenhuma biblioteca. O resultado final é um script de aproximadamente 160 linhas e menos de 3kb minificado. Poderia ser menor do que isso, mas nosso código vai ser extensível e 100% válido em uma verificação JSLint.
Um plugin jQuery é basicamente um código que pode ser aplicado em um ou mais elementos do DOM. Para justificar sua existência, um plugin precisa ser, principalmente, flexível.</description>
    </item>
    
    <item>
      <title>Underscore.js: cinto de utilidades JavaScript</title>
      <link>http://localhost/jhonny-roger/public/underscore-js-cinto-de-utilidades-javascript/</link>
      <pubDate>Wed, 19 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/underscore-js-cinto-de-utilidades-javascript/</guid>
      <description>Underscore.js é uma pequena biblioteca de códigos utilitários voltados principalmente para a manipulação de estrutura de dados.
Por míseros 4kb você ganha funcionalidades como map, select e invoke, além de uma engine de templating que, por si só, já faz valer o uso da biblioteca.
Outro ponto legal é que os scripts procuram sempre utilizar recursos nativos do navegador, ou seja, em browsers modernos a biblioteca tira proveito das implementações de forEach, map, indexOf, filter etc.</description>
    </item>
    
    <item>
      <title>Criando uma aplicação simples com AngularJS</title>
      <link>http://localhost/jhonny-roger/public/criando-uma-aplicacao-simples-com-angularjs/</link>
      <pubDate>Thu, 26 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/criando-uma-aplicacao-simples-com-angularjs/</guid>
      <description>AngularJS é o mais novo lançamento do time de desenvolvedores do Google. Diferentemente de outros frameworks JavaScript, ele adota uma abordagem mais ligada à sintaxe HTML, funcionando como uma espécie de extensão da linguagem.
Neste artigo, vamos criar uma aplicação simples de lista de compras e aprender os conceitos básicos do framework no que diz respeito à associação, manipulação e exibição de dados.
Estrutura inicial Assim como qualquer aplicação web, nosso ponta-pé inicial acontece com a criação de um página básica.</description>
    </item>
    
    <item>
      <title>Assegurando a qualidade do seu código JavaScript</title>
      <link>http://localhost/jhonny-roger/public/qualidade-codigo-javascript/</link>
      <pubDate>Mon, 09 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/qualidade-codigo-javascript/</guid>
      <description>Enquanto testes automatizados asseguram o funcionamento de suas aplicações e, portanto, também a qualidade, algumas ferramentas atuam em outra área importante do seu código: a sintaxe.
Ferramentas de lint são scripts que interpretam seus arquivos javascript e buscam erros como varáveis não utilizadas, espaços em branco no final de linha, ausência de ponto-e-vírgula (um ponto polêmico) entre outros.
Abaixo você encontra alguns utilitários que buscam garantir melhor qualidade e padrão para seus códigos.</description>
    </item>
    
    <item>
      <title>Novos plugins jQuery e bibliotecas JavaScript</title>
      <link>http://localhost/jhonny-roger/public/novos-plugins-jquery-e-bibliotecas-javascript/</link>
      <pubDate>Tue, 12 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/novos-plugins-jquery-e-bibliotecas-javascript/</guid>
      <description>Confira uma lista de plugins e bibliotecas JavaScript que foram destaque nesta primeira metade do ano.
jQuery Transit http://ricostacruz.com/jquery.transit
Este plugin jQuery é uma espécie de wrapper para animações e transições CSS3. Possui a mesma sintaxe do método animate e permite transformar diferentes propriedades de um elemento: eixos X e Y, perspectiva, girar simulando 3D etc.
Curtain.js http://curtain.victorcoulon.fr
O plugin Curtain.js permite a criação de sites e aplicativos com múltiplas camadas.</description>
    </item>
    
    <item>
      <title>JavaScript com café, parte 2</title>
      <link>http://localhost/jhonny-roger/public/javascript-com-cafe-parte-2/</link>
      <pubDate>Tue, 29 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/javascript-com-cafe-parte-2/</guid>
      <description>No [artigo anterior][1] vimos as funcionalidades básicas da linguagem CoffeeScript. Falamos sobre variáveis, funções, objetos, condicionais, loops e integração com jQuery. Neste artigo, veremos algumas implementações mais avançadas, com destaque para o conceito de classes.
Splats Uma função em CoffeeScript pode receber um ou mais parâmetros definidos em sua especificação. Através de splats (&amp;#8230;) podemos definir também parâmetros variáveis, ou seja, você pode passar quantos parâmetros quiser. Estes parâmetros serão convertidos pelo compilador CoffeeScript em um array:</description>
    </item>
    
    <item>
      <title>JavaScript com café</title>
      <link>http://localhost/jhonny-roger/public/javascript-com-cafe/</link>
      <pubDate>Mon, 09 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/javascript-com-cafe/</guid>
      <description>CoffeeScript é uma tentativa de tornar JavaScript mais agradável para nós, programadores.
Diferente dos frameworks e bibliotecas, que foram desenvolvidos como uma camada extra, o código escrito em CoffeeScript é compilado e resulta em JavaScript puro.
A sintaxe é inspirada em linguagens como Ruby e Python (principalmente Ruby), portanto você pode esperar códigos intuitivos e limpos, sem pontos-e-vírgulas, chaves e parênteses (quase).
Instalação &amp;amp; Comandos Não vou entrar muito em detalhes sobre a instalação da linguagem.</description>
    </item>
    
    <item>
      <title>jQuery: conheça os métodos on() e off()</title>
      <link>http://localhost/jhonny-roger/public/jquery-conheca-os-metodos-on-e-off/</link>
      <pubDate>Tue, 13 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/jquery-conheca-os-metodos-on-e-off/</guid>
      <description>Em outubro de 2010 escrevi um artigo aqui mesmo no Tableless sobre a associação dinâmica de eventos. Na época, reinava uma confusão sobre quais métodos utilizar e quando utilizá-los. Eram três as opções: bind(), live() e delegate().
Com o lançamento da versão 1.7 do jQuery, dois métodos definitivos (assim espero) devem acabar com a confusão em torno da associação de eventos: os métodos on() e off().
Eventos diretos A associação direta de eventos ocorre quando o seletor (ou escopo) é omitido nos parâmetros do on().</description>
    </item>
    
    <item>
      <title>jQuery: métodos desconhecidos</title>
      <link>http://localhost/jhonny-roger/public/jquery-metodos-desconhecidos/</link>
      <pubDate>Tue, 31 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/jquery-metodos-desconhecidos/</guid>
      <description>No meu [último artigo][1] falei sobre dicas de otimização e performance de códigos jQuery. Na versão inicial do texto eu havia planejado um tópico sobre os métodos não muito conhecidos, já que alguns, como o ajaxSetup, podem também atuar na performance da sua aplicação.
Acabei descobrindo que este tópico ficaria enorme e, por isso, preferi escrever sobre o assunto em um artigo próprio.
Com vocês, alguns dos métodos menos populares do jQuery!</description>
    </item>
    
    <item>
      <title>jQuery: dicas de otimização e performance</title>
      <link>http://localhost/jhonny-roger/public/jquery-dicas-de-otimizacao-e-performance/</link>
      <pubDate>Tue, 10 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/jquery-dicas-de-otimizacao-e-performance/</guid>
      <description>A grande maioria dos desenvolvedores jQuery não se preocupa muito com performance e otimização. Afinal, o mantra do framework, &amp;#8220;write less, do more&amp;#8221;, envolve esconder a parte feia do Javascript e, muitas vezes, acrescentar camadas desnecessárias.
Neste artigo apresento algumas dicas de como melhorar a performance de sua aplicação jQuery. No entanto, vale lembrar que não é necessário otimizar nenhum código escrito previamente, já que a otimização dificilmente compensará o trabalho.</description>
    </item>
    
    <item>
      <title>20 plugins jQuery que marcaram 2011</title>
      <link>http://localhost/jhonny-roger/public/20-plugins-jquery-que-marcaram-2011/</link>
      <pubDate>Thu, 15 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/20-plugins-jquery-que-marcaram-2011/</guid>
      <description>jQuery Mobile http://jquerymobile.com
Apesar de não ser um plugin, o jQuery Mobile encabeça nossa lista por ter sido uma das ferramentas mais importantes do ano. O objetivo do framework é disponibilizar uma API simples e compatível com todos os dispositivos móveis. Seu código é quase todo baseado em HTML e sua interface oferece suporte total a operações com toque.
Quicksand http://razorjack.net/quicksand/
Quem utiliza sistemas e dispositivos da Apple conhece bem a interface simulada pelo plugin Quick Sand, que permite ordenar e filtrar ítens de uma lista, sejam eles ícones, texto ou imagens, utilizando animações e transições.</description>
    </item>
    
    <item>
      <title>CSS dinâmico com LESS</title>
      <link>http://localhost/jhonny-roger/public/css-dinamico-com-less/</link>
      <pubDate>Wed, 16 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/css-dinamico-com-less/</guid>
      <description>O desenvolvimento front-end nunca esteve tão dinâmico. Ferramentas como HAML, SASS e ZenCoding vêm revolucionando a maneira como trabalhamos. Em projetos onde qualquer coisa pode mudar a qualquer hora, flexibilidade é um ponto importantíssimo.
O [LESS][1] chega nesse barco, adicionando um alto nível de personalização e permitindo recursos de programação em folhas de estilo estáticas. Com a biblioteca, é possível utilizar recursos como variáveis, funções, operações e escopo dentro de simples regras CSS.</description>
    </item>
    
    <item>
      <title>Testando seu código jQuery com Jasmine – Parte 2</title>
      <link>http://localhost/jhonny-roger/public/testando-seu-codigo-jquery-com-jasmine-parte-2/</link>
      <pubDate>Tue, 04 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/testando-seu-codigo-jquery-com-jasmine-parte-2/</guid>
      <description>Jasmine é um framework para testes focado em BDD (Behavior Driven Development). Na primeira parte deste artigo aprendemos seus métodos básicos e realizamos alguns testes simples. Agora chegou a hora de ir um pouco além e conhecer técnicas mais avançadas.
Vale lembrar que, em nossos exemplos, utilizamos uma versão modificada da biblioteca, adaptada para jQuery: jasmine-jquery.
Utilizaremos os dados de um outro artigo, Conteúdo sob demanda com jQuery. O objetivo é testar as solicitações AJAX do carregamento da lista de tweets do Tableless.</description>
    </item>
    
    <item>
      <title>Testando seu código jQuery com Jasmine – Parte 1</title>
      <link>http://localhost/jhonny-roger/public/testando-seu-codigo-jquery-com-jasmine-parte-1/</link>
      <pubDate>Mon, 12 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/testando-seu-codigo-jquery-com-jasmine-parte-1/</guid>
      <description>Durante muito tempo testar/debugar JavaScript era uma tarefa árdua (infelizmente, em alguns navegadores, ainda é). Quem aí se lembra do tempo em que não existia Firebug, por exemplo? E o tamanho dos scripts? Um simples menu drop-drown possuía umas 1.500 linhas de código. Não existia jQuery ou qualquer outro tipo de framework. Tempos difíceis.
Hoje a tarefa do desenvolvedor é muito mais fácil. Para debug temos o já citado Firebug e o Developer Tools do Chrome, entre outros.</description>
    </item>
    
    <item>
      <title>Alternativas ao jQuery</title>
      <link>http://localhost/jhonny-roger/public/alternativas-ao-jquery/</link>
      <pubDate>Wed, 17 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/alternativas-ao-jquery/</guid>
      <description>Apesar de toda a sua popularidade, não são poucas as alternativas para quem procura bibliotecas mais específicas, mais eficientes em certos aspectos e mais enxutas do que o jQuery.
Algumas foram a raiz do novo estilo de desenvolvimento JavaScript, visando uma maior legibilidade e facilidade de aprendizado e acabaram sendo responsáveis pelo atual estado das bibliotecas e frameworks JavaScript.
A curta curva de aprendizado e o leque de plugins fazem do jQuery um concorrente imbatível (com atualmente 50% do &amp;#8220;mercado&amp;#8221;), no entanto, bibliotecas como ExtJS, MooTools e Prototype possuem uma base fiel de usuários e mostram-se alternativas altamente viáveis para a implementação de JavaScript em suas aplicações.</description>
    </item>
    
    <item>
      <title>Habilitando tags em fotos com jQuery</title>
      <link>http://localhost/jhonny-roger/public/habilitando-tags-em-fotos-com-jquery/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/habilitando-tags-em-fotos-com-jquery/</guid>
      <description>Marcar seus amigos nas fotos publicadas é um dos recursos mais populares do Facebook. Neste artigo você confere como implementar uma interface semelhante utilizando o plugin imgAreaSelect. Veremos apenas a parte client-side, sem armazenar as informações das tags, portanto, sem nenhuma programação server-side.
Nosso HTML/CSS O primeiro passo é criar um HTML com a foto de exemplo. Começamos adicionando ao head chamadas para os scripts e as folhas de estilo.</description>
    </item>
    
    <item>
      <title>5 sliders de conteúdo para jQuery</title>
      <link>http://localhost/jhonny-roger/public/5-sliders-de-conteudo-para-jquery/</link>
      <pubDate>Wed, 25 May 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/5-sliders-de-conteudo-para-jquery/</guid>
      <description>Nivo Slider Site oficial | Exemplos
O forte do Nivo Slider é um HTML limpo para a estrutura inicial do slider. Apenas um elemento div com imagens e links é necessário. O foco principal desse slider são imagens, mas o recurso de legenda em HTML acaba possibilitando a exibição de qualquer conteúdo.
Entre as opções oferecidas estão a velocidade e direção da transição e callbakcs para executar ações após o início e o carregamento dos slides.</description>
    </item>
    
    <item>
      <title>Conteúdo sob demanda com jQuery</title>
      <link>http://localhost/jhonny-roger/public/conteudo-sob-demanda-com-jquery/</link>
      <pubDate>Tue, 19 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/conteudo-sob-demanda-com-jquery/</guid>
      <description>Nem sempre uma paginação é a melhor maneira de limitar o conteúdo exibido em um site. Às vezes pode ser bem chato ficar indo de página em página procurando alguma coisa, você acaba se perdendo. O Twitter é um bom exemplo. Na interface do aplicativo, o botão &amp;#8220;load more&amp;#8221; faz as vezes de uma paginação e carrega a próxima sequência de tweets em sua timeline.
Neste artigo, além do link para carregar os próximos conteúdos, veremos também uma abordagem mais dinâmica onde o conteúdo é carregado assim que o scroll atinge o final da página.</description>
    </item>
    
    <item>
      <title>jQuery: seletores personalizados</title>
      <link>http://localhost/jhonny-roger/public/jquery-seletores-personalizados/</link>
      <pubDate>Wed, 30 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/jquery-seletores-personalizados/</guid>
      <description>Um seletor pode ser composto de uma ou mais classes, atributos ou expressões e sua chamada retorna um conjunto de objetos que atendem suas regras.
[cce lang=&amp;#8221;javascript&amp;#8221;]
// seleciona todos os elementos 
$(&amp;#8216;a&amp;#8217;)
// seleciona todas as células com a classe projeto
$(&amp;#8216;td.projeto&amp;#8217;)
// seleciona todas as imagens com o source &amp;#8220;default.jpg&amp;#8221;
$(&amp;#8216;img[src=&amp;#8221;default.jpg&amp;#8221;]&amp;#8217;)
// seleciona todas as linhas diretamente filhas de uma table/tbody
$(&amp;#8216;table &amp;gt; tbody &amp;gt; tr&amp;#8217;)
// seleciona o primeiro parágrafo da página</description>
    </item>
    
    <item>
      <title>Melhorando a exibição de tabelas com jQuery</title>
      <link>http://localhost/jhonny-roger/public/melhorando-exibicao-tabelas-jquery/</link>
      <pubDate>Mon, 14 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/melhorando-exibicao-tabelas-jquery/</guid>
      <description>Tabelas (aquelas com dados tabulares) são elementos importantes, principalmente em sistemas web. É muito comum a presença de tabelas na listagem dos registros em um aplicativo CRUD. Abaixo temos um exemplo de uma dessas tabelas:
Clique aqui para fazer o download do exemplo ou aqui para visualizar o exemplo no navegador.
Utilizando algumas ferramentas jQuery vamos dar uma vida nova para tabelas e seus dados. Efeitos como uma cor diferente no mouseover, filtros, ordenação dos registros e paginação.</description>
    </item>
    
    <item>
      <title>12 plugins jQuery para começar bem o ano</title>
      <link>http://localhost/jhonny-roger/public/12-plugins-jquery-para-comecar-bem-o-ano/</link>
      <pubDate>Thu, 17 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/12-plugins-jquery-para-comecar-bem-o-ano/</guid>
      <description>O grande diferencial do jQuery é sua enorme biblioteca de plugins. Na lista abaixo, veremos plugins que cobrem desde upload de arquivos, passando por uma galeria de imagens diferente e indo até um emulador de livro/revista (aquele esquema de folhear, bastante famoso em aplicativos flash).
Procurei escolher plugins mais novos, desenvolvidos recentemente, mas nem todos seguem este padrão. Meu sonho é poder fazer, um dia, uma lista desse tipo apenas com plugins brasileiros.</description>
    </item>
    
    <item>
      <title>Carrinho de compras com drag and drop</title>
      <link>http://localhost/jhonny-roger/public/carrinho-de-compras-com-drag-and-drop/</link>
      <pubDate>Thu, 13 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/carrinho-de-compras-com-drag-and-drop/</guid>
      <description>Se você comprou alguma coisa recentemente no Submarino deve ter notado uma nova opção na interface do site: agora é possível arrastar os produtos exibidos na página para o seu carrinho, que fica exibido de forma permanente no topo do site.
De uma forma simples, vou tentar mostrar pra vocês como implementar uma solução parecida utilizando jQuery e sua biblioteca para interfaces, a jQuery UI &amp;#8211; é nela que encontramos os plugins draggable() e droppable(), responsáveis, como os nomes sugerem, por toda nossa operação de arrastar e soltar produtos.</description>
    </item>
    
    <item>
      <title>Templates e jQuery – parte 2</title>
      <link>http://localhost/jhonny-roger/public/templates-jquery-parte2/</link>
      <pubDate>Mon, 13 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/templates-jquery-parte2/</guid>
      <description>Na primeira parte deste artigo você conferiu uma introdução ao novo plugin .tmpl() que possibilita a utilização de templates para retornos e saídas de suas aplicações jQuery. O plugin certamente é um avanço considerável na organização de código &amp;#8211; é o JavaScript ficando cada vez mais profissional e robusto, abandonando a fama de ser uma simples linguagem de script, sem padrões.
A forma mais básica de utilização do plugin .</description>
    </item>
    
    <item>
      <title>Templates e jQuery – parte 1</title>
      <link>http://localhost/jhonny-roger/public/templates-e-jquery-parte-1/</link>
      <pubDate>Mon, 08 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/templates-e-jquery-parte-1/</guid>
      <description>Na dieta diária do desenvolvedor front-end sempre esteve presente uma saladinha de HTML com JavaScript. Principalmente quando precisamos implementar um código com funcionalidades AJAX. Por exemplo, imagine que o bloco abaixo representa o retorno de um getJSON() da vida:
for( i in noticias ) { html = &#39;&amp;lt;li&amp;gt;&amp;lt;h3&amp;gt;&#39; + noticias[i][&#39;titulo&#39;] + &#39;&amp;lt;/h3&amp;gt;&#39;; html += &#39;&amp;lt;span class=&#34;data&#34;&amp;gt;&#39; + noticias[i][&#39;data_publicacao&#39;] + &#39;&amp;lt;/span&amp;gt;&#39;; html += &#39;&amp;lt;span&amp;gt;&#39; + noticias[i][&#39;chamada&#39;] + &#39;&amp;lt;/span&amp;gt;&#39;; html += &#39;&amp;lt;span&amp;gt;&amp;lt;a href=&#34;</description>
    </item>
    
    <item>
      <title>Javascript e acessibilidade</title>
      <link>http://localhost/jhonny-roger/public/javascript-e-acessibilidade/</link>
      <pubDate>Thu, 04 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/javascript-e-acessibilidade/</guid>
      <description>É muito comum o desenvolvedor ficar empolgado ao descobrir recursos, plugins, animações e efeitos JavaScript e acabar exagerando no produto final. Também é muito comum, como disse a Thaiana, que acessiblidade esteja ligado exclusivamente a sites governamentais. Aos poucos este cenário está mudando.
Além de tornar o seu site acessível à pessoas com necessidades especiais, as técnicas abaixo serão úteis também quando o navegador do usuário estiver com JavaScript desabilitado.</description>
    </item>
    
    <item>
      <title>Associando eventos dinamicamente</title>
      <link>http://localhost/jhonny-roger/public/associando-eventos-dinamicamente/</link>
      <pubDate>Mon, 04 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/associando-eventos-dinamicamente/</guid>
      <description>No JavaScript, eventos correspondem à qualquer interação do usuário com o navegador. O clássico addEventListener ganhou sua versão no jQuery através do método .bind() ou com seus respectivos métodos (.click(), .focus(), .keyup() etc. ). Da mesma forma, é possível remover/desassociar um evento através do método .unbind(). O assunto eventos é tão rico que merece um outro artigo.
Neste, vou falar dos métodos .live() e .die() e dos novos .delegate() e .</description>
    </item>
    
    <item>
      <title>Anatomia de um plugin jQuery</title>
      <link>http://localhost/jhonny-roger/public/anatomia-de-um-plugin-jquery/</link>
      <pubDate>Tue, 14 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/anatomia-de-um-plugin-jquery/</guid>
      <description>Um dos grandes trunfos do jQuery é a sua vasta gama de plugins. Praticamente qualquer efeito, ação ou manipulação que você consiga imaginar já deve possuir um plugin. Caso contrário, quem sabe você mesmo não desenvolve um?
Neste artigo, você confere técnicas de como criar o seu próprio plugin. Vamos ver dois exemplos. O primeiro plugin adiciona classes ao primeiro e último ítem de uma lista, tabela, div etc. e o segundo simula a busca por textos do navegador Safari (aquele highlight bacana, como um marcador de textos, no termo procurado).</description>
    </item>
    
  </channel>
</rss>