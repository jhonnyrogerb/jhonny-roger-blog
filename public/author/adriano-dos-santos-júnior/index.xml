<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Adriano Dos Santos Júnior on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/author/adriano-dos-santos-j%C3%BAnior/</link>
    <description>Recent content in Adriano Dos Santos Júnior on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 15 Jul 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/author/adriano-dos-santos-j%C3%BAnior/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Você sabe paginar dados no MySQL corretamente?</title>
      <link>http://localhost/jhonny-roger/public/voce-sabe-paginar-dados-no-mysql-corretamente/</link>
      <pubDate>Fri, 15 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/voce-sabe-paginar-dados-no-mysql-corretamente/</guid>
      <description>Esta postagem já começa com uma pergunta: Será que sabemos realmente fazer uma paginação de dados da forma correta?
 ATENÇÃO! Não irei falar do uso de nenhum framework PHP, bibliotecas de ORM ou plugins em JavaScript. Irei tratar sobre a consulta ao banco de dados, somente.  &amp;nbsp;
Talvez você conheça esta funcionalidade do MySQL, e talvez até comentará que isto é algo &amp;#8220;muito básico&amp;#8221;, mas vale lembrar: &amp;#8220;Nem todos sabem de tudo.</description>
    </item>
    
    <item>
      <title>7 funções essenciais do PHP que você deve conhecer</title>
      <link>http://localhost/jhonny-roger/public/7-funcoes-essenciais-php-que-voce-deve-conhecer/</link>
      <pubDate>Fri, 03 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/7-funcoes-essenciais-php-que-voce-deve-conhecer/</guid>
      <description>range() Geralmente ao se fazer um &amp;#8220;loop&amp;#8220;, utiliza-se o _while _ou for. Ambas estruturas são ligeiramente &amp;#8220;feias&amp;#8221; ao visualizar o código. Uma boa alternativa é utilizar o foreach. Mas como fazer uma repetição, se o foreach trabalha com um array existente?
No exemplo vamos fazer um loop de 5 posições, começando do número 1.
&amp;lt;?php foreach (range(1,5) as $ordem) { print(&#39;Ordem : &#39;.$ordem.&#39;&amp;lt;br&amp;gt;&#39;); } //Resultado //Ordem: 1 //Ordem: 2 //Ordem: 3 //Ordem: 4 //Ordem: 5  array_unique() Diversas vezes nos deparamos com um array e valores duplicados.</description>
    </item>
    
  </channel>
</rss>