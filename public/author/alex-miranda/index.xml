<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alex Miranda on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/author/alex-miranda/</link>
    <description>Recent content in Alex Miranda on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 09 Dec 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/author/alex-miranda/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Uma visão detalhada sobre instanciação de variaveis no JavaScript</title>
      <link>http://localhost/jhonny-roger/public/uma-visao-detalhada-sobre-instanciacao-de-variaveis-no-javascript/</link>
      <pubDate>Wed, 09 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/uma-visao-detalhada-sobre-instanciacao-de-variaveis-no-javascript/</guid>
      <description>Hoisting Antes de falarmos sobre hoisting é importante lembrar como funciona escopo em JavaScript. Escopo nada mais é do que um contexto criado para os valores e expressões terem sua validade. Em JavaScript o escopo é criado com a declaração de funções. Vamos a um exemplo:
// Escopo global var num = 0; // Escopo criado pela função function imprimir(){ var num = 1; console.log(num); } // Executar a função e o que tem em seu escopo imprimir(); // 1 // Imprimindo a variável do escopo global console.</description>
    </item>
    
  </channel>
</rss>