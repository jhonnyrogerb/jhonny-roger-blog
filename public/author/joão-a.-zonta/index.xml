<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>João A. Zonta on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/author/jo%C3%A3o-a.-zonta/</link>
    <description>Recent content in João A. Zonta on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 14 Jul 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/author/jo%C3%A3o-a.-zonta/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Aplicativos Desktop com NW.js – Node Webkit – Introdução</title>
      <link>http://localhost/jhonny-roger/public/aplicativos-desktop-com-nw-js-node-webkit-introducao/</link>
      <pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/aplicativos-desktop-com-nw-js-node-webkit-introducao/</guid>
      <description>Este é o primeiro artigo de uma série que vou escrever sobre aplicações desktop usando tecnologias web. (HTML, CSS, Javascript e WebGL) O NW.js é uma aplicação em tempo de execução baseado em Chromium e Node.js, com ele é possível desenvolver aplicativos nativos para Windows, Linux e Mac, usando tecnologias web e usufruindo dos pacotes do Node.js.
Para ter uma ideia do que é possível fazer, visite este link e veja alguns aplicativos desenvolvidos com NW.</description>
    </item>
    
    <item>
      <title>Usando GIT para atualizar arquivos no servidor de hospedagem II – Final</title>
      <link>http://localhost/jhonny-roger/public/usando-git-para-atualizar-arquivos-no-servidor-de-hospedagem-ii-final/</link>
      <pubDate>Thu, 19 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/usando-git-para-atualizar-arquivos-no-servidor-de-hospedagem-ii-final/</guid>
      <description>Esta é a segunda e última parte do artigo que explica como fazer um esquema simples para deploy automático usando GIT + Bitbucket
A mesma configuração pode ser usada em qualquer servidor GIT e qualquer serviço de hospedagem que tenha acesso via ssh e git instalado
Se você ainda não leu a primeira parte, segue o link: http://tableless.com.br/usando-git-para-atualizar-arquivos-no-servidor-de-hospedagem
No artigo anterior, criamos as chaves SSH para autenticação no Bitbucket, criamos um repositório GIT e manualmente executamos o comando | git pull | para atualizar o nosso repositório.</description>
    </item>
    
    <item>
      <title>Usando GIT para atualizar arquivos no servidor de hospedagem</title>
      <link>http://localhost/jhonny-roger/public/usando-git-para-atualizar-arquivos-no-servidor-de-hospedagem/</link>
      <pubDate>Thu, 08 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/usando-git-para-atualizar-arquivos-no-servidor-de-hospedagem/</guid>
      <description>Solução usando Bitbucket + Kinghost A mesma configuração pode ser usada em qualquer servidor GIT e qualquer serviço de hospedagem que tenha acesso via ssh e git instalado
Vamos imaginar um cenário em que você está desenvolvendo um site, nesse site você tem vários arquivos, distribuídos em pastas separadas, css, javascript, html, etc&amp;#8230;
Sempre que você altera algum arquivo, precisa enviar por FTP, para atualizar seu site. Um fluxo (antigo), mas parece ser ainda muito normal (infelizmente) por aí.</description>
    </item>
    
  </channel>
</rss>