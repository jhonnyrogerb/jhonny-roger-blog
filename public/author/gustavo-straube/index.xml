<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gustavo Straube on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/author/gustavo-straube/</link>
    <description>Recent content in Gustavo Straube on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 07 Apr 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/author/gustavo-straube/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Manipulando arquivos carregados por upload no Laravel</title>
      <link>http://localhost/jhonny-roger/public/manipulando-arquivos-carregados-por-upload-no-laravel/</link>
      <pubDate>Fri, 07 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/manipulando-arquivos-carregados-por-upload-no-laravel/</guid>
      <description>Laravel é um framework que tem se tornado bastante popular no mundo do PHP. Uma das vantagens dele sobre outros frameworks é que ele permite que seu código fique limpo e fluído, especialmente pela forma como ele trata as dependências e outras ajudas. Mas isso é assunto para outro momento. Agora, queria falar um pouco sobre a manipulação de arquivos carregados via upload.
Para começar, queria compartilhar uma situação hipotética: por causa da lógica de negócio por trás do projeto que você está trabalhando, é necessário garantir que arquivos duplicados não sejam carregados via upload.</description>
    </item>
    
    <item>
      <title>Assinatura de newsletter com PHP integrada à API do Mailchimp</title>
      <link>http://localhost/jhonny-roger/public/assinatura-de-newsletter-com-php-integrada-a-api-do-mailchimp/</link>
      <pubDate>Tue, 10 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/assinatura-de-newsletter-com-php-integrada-a-api-do-mailchimp/</guid>
      <description>O Mailchimp tem uma API bem completa. Arrisco dizer que é possível fazer uma interface com muitas das funcionalidades de gerenciamento de listas, envios, etc usando a API — fica a dica para quem quiser desenvolver uma aplicação explorando alguma lacuna que o painel do Mailchimp deixa a desejar.
Eu sabia da existência da API faz algum tempo, mas usava uma função simples de exportação de CSV em alguns projetos.</description>
    </item>
    
    <item>
      <title>Rastreando exceções no PHP com o Airbrake</title>
      <link>http://localhost/jhonny-roger/public/rastreando-excecoes-no-php-com-o-airbrake/</link>
      <pubDate>Mon, 15 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/rastreando-excecoes-no-php-com-o-airbrake/</guid>
      <description>Identificar erros, e suas causas, em uma aplicação web pode se tornar uma tarefa complicada. Ter algumas ferramentas à mão pode simplificar bastante essa missão.
Algo que provavelmente ajuda a rastrear uma falha são os logs da aplicação ou do servidor onde ela está sendo executada, mas não é fácil encontrar algo específico, especialmente se o volume de registros é grande.
Outra situação desagradável é quando os erros acontecem em situações específicas, difíceis de reproduzir.</description>
    </item>
    
    <item>
      <title>PHP na linha de comando</title>
      <link>http://localhost/jhonny-roger/public/php-na-linha-de-comando/</link>
      <pubDate>Thu, 24 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/php-na-linha-de-comando/</guid>
      <description>Quem conhece um pouco de alguma linguagem de programação, acaba se acostumando a escrever trechos de código para automatizar tarefas simples ou resolver problemas. Para aqueles mais íntimos do PHP, se torna habitual escrever aplicações com uma interface simples em HTML, mas com isso deixamos de aproveitar algumas vantagens da linha de comando em conjunto com o nosso script para resolver essas questões triviais (ou nem tanto). Também existe benefício de não depender de um servidor web e um navegador.</description>
    </item>
    
  </channel>
</rss>