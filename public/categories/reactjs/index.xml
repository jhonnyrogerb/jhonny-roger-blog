<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reactjs on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/categories/reactjs/</link>
    <description>Recent content in Reactjs on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 24 May 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/categories/reactjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Indo além no Mundo React-Native</title>
      <link>http://localhost/jhonny-roger/public/indo-alem-no-react-native/</link>
      <pubDate>Wed, 24 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/indo-alem-no-react-native/</guid>
      <description>Indo além no Mundo React-Native. Nos últimos meses resolvi aprofundar meus estudos no React Native. Após anos trabalhando apenas com desenvolvimento mobile nativo, um grande amigo me convenceu a experimentar esse novo framework.
Confesso que até então, eu era um pouco reticente sobre frameworks que prometem entregar aplicativos nas duas plataformas (iOS e Android) a partir de um código único. Minha experiência com Cordova me dizia que isso não funcionava bem.</description>
    </item>
    
    <item>
      <title>O fim da profissão front-end</title>
      <link>http://localhost/jhonny-roger/public/carreira-de-front-end-vai-morrer/</link>
      <pubDate>Mon, 20 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/carreira-de-front-end-vai-morrer/</guid>
      <description>O processo de desenvolvimento web pode se dividir em três categorias: design, front-end e back-end. Na minha opinião, a categoria que tem mais processos manuais e repetitivos é sem duvida o front-end.
Pare pra pensar: o core do trabalho do front-end se resume em duas partes:
 implementação do layout: produção da primeira camada de código, onde replicamos o layout criado em algum programa gráfico, para código estático em HTML, CSS e JS.</description>
    </item>
    
    <item>
      <title>Hello World com React, do rascunho até o primeiro componente</title>
      <link>http://localhost/jhonny-roger/public/hello-world-com-react-do-rascunho-ate-o-primeiro-componente/</link>
      <pubDate>Mon, 31 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/hello-world-com-react-do-rascunho-ate-o-primeiro-componente/</guid>
      <description>Há muito tempo eu queria fazer um Hello World com React, mas nunca tinha tempo por que eu mudei de área há uns 3 anos, ficando mais na parte de gestão de produtos e times, deixando quase que totalmente o desenvolvimento e a escrita de código. Por isso, senti na pele o que os iniciantes sentem quando precisam fazer um simples Hello World de uma tecnologia nova. São tantos artigos falando coisas diferentes, usando setups diferentes, na sua maioria complexos e que não explicam as coisas com simplicidade.</description>
    </item>
    
    <item>
      <title>Criando sua aplicação React em 2 minutos</title>
      <link>http://localhost/jhonny-roger/public/criando-sua-aplicacao-react-em-2-minutos/</link>
      <pubDate>Fri, 05 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/criando-sua-aplicacao-react-em-2-minutos/</guid>
      <description>Para facilitar a criação de aplicações utilizando React, o Facebook lançou uma ferramenta que promete reduzir toda complexidade envolvida em configurar um novo projeto que utilize a tecnologia.
O projeto chamado de “ Create React App”, divulgado por Dan Abramov no blog oficial do React, permite que os desenvolvedores criem suas aplicações React com apenas um comando. Não é criado somente a estrutura básica de pastas, mas também toda a configuração de build e dependências necessárias, ou seja, comandos complexos do Babel e Webpack, usado na maior parte dos projetos, são abstraídos, permitindo ao desenvolvedor se concentrar no que realmente interessa: a sua aplicação.</description>
    </item>
    
    <item>
      <title>ReactJS 101</title>
      <link>http://localhost/jhonny-roger/public/reactjs-101/</link>
      <pubDate>Sat, 07 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/reactjs-101/</guid>
      <description>TL;DR ReactJS é a biblioteca criada pelo Facebook para criação de interfaces. Pensando no mundo MV* qual vivenciamos hoje, este seria o V (view).
Através de uma api simples qual previlegia o uso do javascript e com uma performance acima da apresentada pelos seus concorrentes, o ReactJS vem ganhando cada dia mais adeptos.
Building Blocks Fortemente inspirado pelo conceito de componentes, trazendo duas grandes características que o desenvolvedor deve se concentrar: Components eElements.</description>
    </item>
    
    <item>
      <title>Introdução ao Redux</title>
      <link>http://localhost/jhonny-roger/public/bem-vindo-ao-redux/</link>
      <pubDate>Mon, 04 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/bem-vindo-ao-redux/</guid>
      <description>Introdução Redux é uma maneira de pensar o desenvolvimento de aplicações criada pelo @dan_abramov que teve como principio optimizar a ideia do Flux. Ela foi criada para tentar optimizar alguns obstáculos que o Flux começou a enfrentar, e também veio para simplificar a implementação do mesmo. Inspirada em conceitos da linguagem funcional Elm, e de algumas bibliotecas JS como o Immutable.js, o Baobab, o RxJs e o próprio Flux, o Redux veio com alguns paradigmas interessantes e um pouco diferenciados do Flux.</description>
    </item>
    
    <item>
      <title>Introdução ao webpack</title>
      <link>http://localhost/jhonny-roger/public/introducao-ao-webpack/</link>
      <pubDate>Mon, 23 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/introducao-ao-webpack/</guid>
      <description>O que é? (Onde vivem? O que comem?) webpack (com &amp;#8220;w&amp;#8221; minúsculo, respeitando a grafia do site oficial) é um empacotador de código para projetos web, como o browserify. O que ele se propõe a fazer de diferente é focar em módulos da sua aplicação. Nem sempre ter todo e qualquer JavaScript/CSS do seu projeto num único arquivo é bom, por isso o webpack tem a ideia de code splitting, onde você modulariza partes reaproveitáveis do seu projeto, facilitando o desenvolvimento independente, por exemplo, ter uma equipe trabalhando em um módulo X e outra num módulo Y, mas ambos de um mesmo projeto.</description>
    </item>
    
  </channel>
</rss>