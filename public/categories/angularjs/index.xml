<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Angularjs on Jhonny Roger</title>
    <link>http://localhost/jhonny-roger/public/categories/angularjs/</link>
    <description>Recent content in Angularjs on Jhonny Roger</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 02 Dec 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/jhonny-roger/public/categories/angularjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Angular 2, vale a pena?</title>
      <link>http://localhost/jhonny-roger/public/angular-2-vale-pena/</link>
      <pubDate>Fri, 02 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/angular-2-vale-pena/</guid>
      <description>Ultimamente, com o boom do JavaScript, os desenvolvedores front end se depararam com a difícil questão: qual framework e/ou biblioteca usar em meu projeto? A resposta é: depende do que você está procurando. Construir uma SPA completa? Uma aplicação híbrida? Ou apenas um simples formulário? O objetivo aqui não é enumerar as diferenças entre todas as várias ferramentas existentes no mercado, e sim focar no Angular, a que considero mais completa e que pode atender a todos os objetivos de um projeto.</description>
    </item>
    
    <item>
      <title>Criando uma aplicação móvel com Ionic 2 e Angular 2 em dez passos</title>
      <link>http://localhost/jhonny-roger/public/criando-uma-aplicacao-movel-com-ionic-2-e-angular-2-em-dez-passos/</link>
      <pubDate>Fri, 04 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/criando-uma-aplicacao-movel-com-ionic-2-e-angular-2-em-dez-passos/</guid>
      <description>Introdução À esta altura do campeonato é provável que você já tenha ouvido falar da nova versão deste famoso framework para criação de aplicações móveis híbridas. O Ionic 2 acaba de chegar em seu Release Candidate e, com ele, trás uma série de recursos e otimizações de código, além de um considerável ganho de performance! Muito desse mérito se deve ao Angular (como é chamada a nova versão do framework, que deixa para trás o &amp;#8220;JS&amp;#8221; ao final do nome) que chega &amp;#8211; finalmente &amp;#8211; na sua versão estável, provando que não está para brincadeiras.</description>
    </item>
    
    <item>
      <title>Angular JS – Service x Factory</title>
      <link>http://localhost/jhonny-roger/public/angular-js-service-x-factory/</link>
      <pubDate>Sun, 10 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/angular-js-service-x-factory/</guid>
      <description>Angular JS – Service x Factory Qual a diferença entre service e factory no AngularJS? Esta é uma pergunta muito comum entre os desenvolvedores que estão usando o AngularJS.
Mas antes de entrar neste assunto, vamos revisar como definir e usar .service e .factory.
Um .service é um método no nosso módulo principal (app), que recebe um nome e uma função que o definem.
Podemos definir um .service assim:</description>
    </item>
    
    <item>
      <title>Introdução ao Ionic Framework</title>
      <link>http://localhost/jhonny-roger/public/introducao-ao-ionic-framework/</link>
      <pubDate>Thu, 26 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/introducao-ao-ionic-framework/</guid>
      <description>O que é o Ionic? Ionic é um framework criado no final de 2013 que visa a criação de aplicações híbridas para dispositivos móveis. Hoje o Ionic encontra-se na versão 1.0.0-beta.14 que segundo a equipe por trás do desenvolvimento, será o último release beta.
Ele nada mais é do que uma pilha de componentes e outros frameworks. Estes componentes são:
 Cordova: Integração com recursos nativos dos dispositivos AngularJS: Criação da parte Web da App Ionic Module e o Ionic CLI: Ferramentas e Componentes disponibilizados pelo framework  Pré-requisitos Para utilizar o Ionic e desenvolvedor aplicações móveis com o Cordova é necessário ter instalado as seguintes dependências:</description>
    </item>
    
    <item>
      <title>Em um relacionamento sério com generators front-end – Parte 2</title>
      <link>http://localhost/jhonny-roger/public/em-um-relacionamento-serio-com-generators-front-end-parte-2/</link>
      <pubDate>Wed, 10 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/em-um-relacionamento-serio-com-generators-front-end-parte-2/</guid>
      <description>O início O objetivo desse post não é para fazer com que os desenvolvedores só usem esta ferramenta, e sim para apresentar opções de desenvolvimentos ágeis que podem ser úteis no seu dia a dia. É uma ferramenta a qual lhe oferece um stack completo de estrutura de projeto, basta você saber como usar e para que vai usar.
O Yeoman O Yeoman é considerado uma ferramenta web de andaimes para criação de webapp modernos, nele você consegue montar um esquema de trabalho facilitando seu desenvolvimento.</description>
    </item>
    
    <item>
      <title>Entendendo as diretivas e fazendo abas com AngularJS</title>
      <link>http://localhost/jhonny-roger/public/diretivas-angularjs-abas/</link>
      <pubDate>Mon, 08 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/jhonny-roger/public/diretivas-angularjs-abas/</guid>
      <description>O AngularJS é um framework em JavaScript para a criação de web apps. Uma das suas principais características é levar parte da lógica das funcionalidades dos componentes direto para o HTML a partir das diretivas.
O Rodrigo Branas define as diretivas assim:
 Diretivas são extensões da linguagem HTML que permitem a implementação de novos comportamentos de forma declarativa.  Isso quer dizer que você não vai precisar escrever um monte de JavaScripts para executar funções que deveriam ser simples, como abas, por exemplo.</description>
    </item>
    
  </channel>
</rss>